"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9719],{92653:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>p,contentTitle:()=>_,default:()=>l,frontMatter:()=>s,metadata:()=>a,toc:()=>o});var c=t(74848),r=t(28453);const s={},_=void 0,a={id:"Chcore\u6e90\u7801\u9605\u8bfb/\u8fdb\u7a0b\u7ba1\u7406/\u80fd\u529b\u7ec4\u7ba1\u7406",title:"\u80fd\u529b\u7ec4\u7ba1\u7406",description:"capability \u673a\u5236",source:"@site/docs/Chcore\u6e90\u7801\u9605\u8bfb/\u8fdb\u7a0b\u7ba1\u7406/1.\u80fd\u529b\u7ec4\u7ba1\u7406.md",sourceDirName:"Chcore\u6e90\u7801\u9605\u8bfb/\u8fdb\u7a0b\u7ba1\u7406",slug:"/Chcore\u6e90\u7801\u9605\u8bfb/\u8fdb\u7a0b\u7ba1\u7406/\u80fd\u529b\u7ec4\u7ba1\u7406",permalink:"/docs/Chcore\u6e90\u7801\u9605\u8bfb/\u8fdb\u7a0b\u7ba1\u7406/\u80fd\u529b\u7ec4\u7ba1\u7406",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"notesSidebar",previous:{title:"\u7cfb\u7edf\u8c03\u7528",permalink:"/docs/Chcore\u6e90\u7801\u9605\u8bfb/\u7cfb\u7edf\u8c03\u7528/"},next:{title:"\u7b2c\u4e00\u4e2a\u7ebf\u7a0b",permalink:"/docs/Chcore\u6e90\u7801\u9605\u8bfb/\u8fdb\u7a0b\u7ba1\u7406/\u7b2c\u4e00\u4e2a\u7ebf\u7a0b"}},p={},o=[{value:"capability \u673a\u5236",id:"capability-\u673a\u5236",level:3}];function i(n){const e={a:"a",blockquote:"blockquote",code:"code",em:"em",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...n.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(e.h3,{id:"capability-\u673a\u5236",children:"capability \u673a\u5236"}),"\n",(0,c.jsx)(e.p,{children:"\u6587\u6863\u4e0a\u53ea\u5bf9\u80fd\u529b\u7ec4\u7684\u673a\u5236\u505a\u4e86\u7b80\u8981\u7684\u63cf\u8ff0\uff0c\u4f46\u6b64\u4e8b\u5728Linux\u4e4b\u4e2d\u4ea6\u6709\u8bb0\u8f7d\u2026\u2026"}),"\n",(0,c.jsxs)(e.p,{children:["ref: ",(0,c.jsx)(e.a,{href:"https://www.cnblogs.com/sparkdev/p/11417781.html",children:"https://www.cnblogs.com/sparkdev/p/11417781.html"})]}),"\n",(0,c.jsxs)(e.p,{children:["wiki\u4e0a\u7684\u7b80\u5355\u540d\u8bcd\u4ecb\u7ecd ",(0,c.jsx)(e.a,{href:"https://en.wikipedia.org/wiki/Capability-based_operating_system",children:"https://en.wikipedia.org/wiki/Capability-based_operating_system"})]}),"\n",(0,c.jsx)(e.p,{children:"tl;dr \u80fd\u529b\u7ec4\u662f\u4e3a\u5b89\u5168\u800c\u751f\u7684\u8fdb\u7a0b\u201c\u90e8\u5206root\u201d\u7684\u673a\u5236\uff0c\u4f8b\u5982\u4f60\u53ef\u4ee5\u5728\u7528\u6237\u6001\u8fd0\u884c/bin/ping"}),"\n",(0,c.jsxs)(e.blockquote,{children:["\n",(0,c.jsxs)(e.p,{children:["\u5728Chcore\u4e2d\u6240\u6709\u7684\u7cfb\u7edf\u8d44\u6e90\u90fd\u53eb\u505aobject\uff08\u5bf9\u8c61\uff09\uff0c\u7528\u9762\u5411\u5bf9\u8c61\u7684\u65b9\u6cd5\u8fdb\u884c\u7406\u89e3\u7684\u8bdd\uff0cobject\u5373\u4e3a\u4e0d\u540c\u5185\u6838\u5bf9\u8c61\u4f8b\u5982vmspace, pmo, thread(\u7b49\u7b49)\u7684\u7236\u7c7b\uff0c Chcore\u901a\u8fc7\u80fd\u529b\u7ec4\u673a\u5236\u7ba1\u7406\u6240\u6709\u7684\u7cfb\u7edf\u8d44\u6e90\uff0c",(0,c.jsx)(e.strong,{children:"\u80fd\u529b\u7ec4\u672c\u8eab\u53ea\u662f\u4e00\u4e2a\u5305\u542b\u6307\u5411object\u7684\u6307\u9488\u7684\u6570\u7ec4"})]}),"\n"]}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-c",children:"struct object_slot {\n\tint slot_id;\n\tstruct cap_group *cap_group;\n\tstruct object *object;\n\t/* link copied slots pointing to the same object */\n\tstruct list_head copies;\n\t/* rights for object */\n\tcap_right_t rights;\n};\n\n#define BASE_OBJECT_NUM\t\tBITS_PER_LONG\n/* 1st cap is cap_group. 2nd cap is vmspace */\n#define CAP_GROUP_OBJ_ID\t0\n#define VMSPACE_OBJ_ID\t\t1\n\nstruct slot_table {\n\tunsigned int slots_size;\n\tstruct object_slot **slots;\n\t/*\n\t * if a bit in full_slots_bmp is 1, corresponding\n\t * sizeof(unsigned long) bits in slots_bmp are all set\n\t */\n\tunsigned long *full_slots_bmp;\n\tunsigned long *slots_bmp;\n\tstruct rwlock table_guard;\n};\n\n#define MAX_GROUP_NAME_LEN 63\n\nstruct cap_group {\n\tstruct slot_table slot_table;\n\n\t/* Proctect thread_list and thread_cnt */\n\tstruct lock threads_lock;\n\tstruct list_head thread_list;\n\t/* The number of threads */\n\tint thread_cnt;\n\n\t/*\n\t * Each process has a unique badge as a global identifier which\n\t * is set by the system server, procmgr.\n\t * Currently, badge is used as a client ID during IPC.\n\t */\n\tbadge_t badge;\n\tint pid;\n\n\t/* Ensures the cap_group_exit function only be executed once */\n\tint notify_recycler;\n\n\t/* A ptrace object that the process attached to */\n\tvoid *attached_ptrace;\n\n\t/* Now is used for debugging */\n\tchar cap_group_name[MAX_GROUP_NAME_LEN + 1];\n\n\t/* Each Process has its own futex status */\n\tstruct lock futex_lock;\n\tstruct htable futex_entries;\n\n#ifdef CHCORE_OPENTRUSTEE\n\tTEE_UUID uuid;\n\tsize_t heap_size_limit;\n#endif /* CHCORE_OPENTRUSTEE */\n};\n\n#define current_cap_group (current_thread->cap_group)\n"})}),"\n",(0,c.jsx)(e.p,{children:"\u770b\u8d77\u6765\u6307\u9488\u4e71\u98de\u7684\u771f\u662f\u4e71\uff01\u8ba9\u6211\u4eec\u4e00\u4e00\u62c6\u89e3"}),"\n",(0,c.jsx)(e.p,{children:"\u6587\u6863\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u5165\u624b\u70b9"}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)(e.img,{alt:"capability",src:t(62324).A+"",width:"1088",height:"631"})}),"\n",(0,c.jsxs)(e.p,{children:["\u9996\u5148\uff0c",(0,c.jsx)(e.strong,{children:"\u80fd\u529b\u7ec4\u672c\u8eab\u53ea\u662f\u4e00\u4e2a\u5305\u542b\u6307\u5411object\u7684\u6307\u9488\u7684\u6570\u7ec4"})]}),"\n",(0,c.jsx)(e.p,{children:"\u4f53\u73b0\u5728"}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-c",children:"struct cap_group {\n\tstruct slot_table slot_table;\n\t// ...\n}\n\nstruct slot_table {\n\tunsigned int slots_size;\n\tstruct object_slot **slots; \n\t// bitmap to speed up and ...\n};\nstruct object_slot {\n\tint slot_id;\n\tstruct object *object;\n\tcap_right_t rights;\n\t// below: \u53cd\u5411\u7684\u5f15\u7528\n\tstruct cap_group *cap_group;\n\t/* link copied slots pointing to the same object */\n\tstruct list_head copies;\n\t/* rights for object */\n};\n"})}),"\n",(0,c.jsx)(e.p,{children:"\u8fd9\u6837\u68b3\u7406\u4e4b\u540e\u5c31\u6e05\u695a\u4e86"}),"\n",(0,c.jsx)(e.p,{children:"\u201c\u80fd\u529b\u201d\u662f\u67d0\u79cd\u5f62\u5f0f\u7684\u5185\u6838\u5bf9\u8c61\uff0c\u4f8b\u5982\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u7f51\u7edc\u8fde\u63a5\uff0c\u8fdb\u7a0b\u901a\u4fe1channel, \u2026"}),"\n",(0,c.jsx)(e.p,{children:"\u6bcf\u4e2a\u8fdb\u7a0b\u5177\u6709\u4e00\u7cfb\u5217\u7684\u5185\u6838\u5bf9\u8c61\u7684\u6307\u9488\uff0c\u5e76\u4e14\u8fd9\u4e9b\u6307\u9488\u9700\u8981\u4e00\u4e2a\u5f15\u7528\u8ba1\u6570\u6765\u4fdd\u8bc1\u8d44\u6e90\u7684\u91ca\u653e"}),"\n",(0,c.jsx)(e.p,{children:"\u4e3a\u4e86\u7b80\u5316\u8d77\u89c1\uff0c\u5047\u8bbe\u6240\u6709\u7684\u8d44\u6e90\u6240\u6709\u6743\u90fd\u662f\u5728\u7ebf\u7a0b\u548c\u5b50\u8fdb\u7a0b\u95f4\u5171\u4eab\u7684"}),"\n",(0,c.jsx)(e.p,{children:"\u5047\u8bbe\u7236\u8fdb\u7a0bp\u6301\u6709\u4e00\u7cfb\u5217\u5185\u6838\u5bf9\u8c61\u7684\u8d44\u6e90\uff0c\u4f8b\u5982\u6587\u4ef6\u63cf\u8ff0\u7b26"}),"\n",(0,c.jsx)(e.p,{children:"\u90a3p\u7684\u7ebf\u7a0b\u662f\u4e0d\u662f\u4e5f\u5e94\u8be5\u6709\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0cp\u7684\u5b50\u8fdb\u7a0b\u662f\u4e0d\u662f\u4e5f\u5e94\u8be5\u6709\u6587\u4ef6\u63cf\u8ff0\u7b26\uff1f\u8fd9\u6837\u7c7b\u6bd4\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u7406\u89e3cap_group\u7684thread_list\uff08\u53c8\u662f\u4e00\u4e2a\u53cd\u5411\u5f15\u7528\uff01thread\u7ed3\u6784\u4f53\u624d\u662f\u903b\u8f91\u4e0a\u201c\u62e5\u6709\u8d44\u6e90\u201d\u7684\u4e00\u65b9\uff09"}),"\n",(0,c.jsx)(e.p,{children:"ps\uff1a\u4e8b\u5b9e\u4e0a\u7b14\u8005\u4e00\u76f4\u8ba4\u4e3a\uff0c\u5185\u6838c\u4ee3\u7801\u96be\u8bfb\u7684\u5f88\u5927\u4e00\u4e2a\u539f\u56e0\u5728\u4e8e\u641e\u4e0d\u6e05\u695a\u6307\u9488\u7684\u6240\u6709\u6743\uff08"}),"\n",(0,c.jsx)(e.p,{children:"\u7ec6\u8282\u4e0a\u800c\u8a00\uff0c\u6709\u4e9b\u5185\u6838\u5bf9\u8c61\u9700\u8981\u7279\u6b8a\u7684\u201c\u6790\u6784\u51fd\u6570\u201d\uff0c\u56e0\u800c\u8fd8\u80fd\u770b\u5230\u7528\u4f20\u7edfc\u5b9e\u73b0\u7684\u201c\u865a\u51fd\u6570\u8868\u201d"}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-c",children:"const obj_deinit_func obj_deinit_tbl[TYPE_NR] = {\n        [0 ... TYPE_NR - 1] = NULL,\n        [TYPE_CAP_GROUP] = cap_group_deinit,\n        [TYPE_THREAD] = thread_deinit,\n        [TYPE_CONNECTION] = connection_deinit,\n        [TYPE_NOTIFICATION] = notification_deinit,\n        [TYPE_IRQ] = irq_deinit,\n        [TYPE_PMO] = pmo_deinit,\n        [TYPE_VMSPACE] = vmspace_deinit,\n#ifdef CHCORE_OPENTRUSTEE\n        [TYPE_CHANNEL] = channel_deinit,\n        [TYPE_MSG_HDL] = msg_hdl_deinit,\n#endif /* CHCORE_OPENTRUSTEE */\n        [TYPE_PTRACE] = ptrace_deinit\n};\n"})}),"\n",(0,c.jsx)(e.p,{children:"\u9488\u5bf9\u8fd9\u6837\u7684\u6570\u636e\u7ed3\u6784, capability.c\u4e4b\u4e2d\u5c0f\u5fc3\u5730\u5b9e\u73b0\u4e86cap_group\u7684\u590d\u5236\uff0c\u91ca\u653e\uff0c\u4f20\u9012\u7b49\u51fd\u6570\uff0c\u4e4b\u4e2d\u7531\u4e8e\u57fa\u4e8e\u5f15\u7528\u8ba1\u6570\u7684\u6240\u6709\u6743\u7684\u590d\u6742\u6027+\u5e76\u53d1+\u4e3a\u4e86\u6027\u80fd\u964d\u4f4e\u9501\u7684\u7c92\u5ea6\uff0c\u4ee3\u7801\u5e76\u4e0d\u662f\u975e\u5e38\u53ef\u8bfb\uff0c\u611f\u5174\u8da3\u7684\u8bfb\u8005\u53ef\u4ee5\u81ea\u884c\u6df1\u5165\u7814\u7a76"}),"\n",(0,c.jsx)(e.p,{children:"\u56de\u5230\u6587\u6863\uff0c\u4e0b\u4e00\u6b65\u662f\u6765\u63a2\u7a76\u4e00\u4e0bcap_group\u7684\u521b\u5efa"}),"\n",(0,c.jsx)(e.p,{children:"create_root_cap_group \u51fd\u6570"}),"\n",(0,c.jsx)(e.p,{children:"\u662f\u7b2c\u4e00\u4e2acap_group, \u4e5f\u662f\u7b2c\u4e00\u4e2a\u7528\u6237\u6001\u51fd\u6570init\u6240\u8c03\u7528\u7684\u51fd\u6570"}),"\n",(0,c.jsx)(e.p,{children:"\u7531\u4e8ecap_group\u672c\u8eab\u4f5c\u4e3a\u4e00\u4e2a\u5185\u6838\u5bf9\u8c61\u4e5f\u9700\u8981\u5305\u5728cap_group\u91cc\u9762\uff0c\u6240\u4ee5\u5229\u7528\u5df2\u7ecf\u7ed9\u7684\u5de5\u5177\u51fd\u6570\u80fd\u591f\u5199\u51fa"}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-c",children:'        cap_group = obj_alloc(TYPE_CAP_GROUP, sizeof(*cap_group));\n        if (!cap_group) {\n                kwarn("failed alloc cap_group in %s\\n", __func__);\n                return NULL;\n        }\n        cap_group_init(cap_group,\n                       BASE_OBJECT_NUM,\n                       /* Fixed badge */ ROOT_CAP_GROUP_BADGE);\n\n        slot_id = cap_alloc(cap_group, cap_group); // arg: *cap, *obj\n'})}),"\n",(0,c.jsx)(e.p,{children:"\u7533\u8bf7\u4e86cap_group\u5bf9\u8c61\uff0c\u7136\u540e\u628a\u6307\u5411\u81ea\u5df1\u7684\u6307\u9488\u653e\u5230\u4e86slot\u91cc\u9762"}),"\n",(0,c.jsx)(e.p,{children:"\u6709\u4eba\u53ef\u80fd\u4f1a\u95ee: \u8fd9\u4e0d\u662f\u5faa\u73af\u5f15\u7528\u4e86\u5417?"}),"\n",(0,c.jsx)(e.p,{children:"\u6211\u4eec\u8981\u7684\u6b63\u662f\u5faa\u73af\u5f15\u7528\uff0cinit\u8fdb\u7a0b\u4e0d\u5e94\u8be5\u7ed3\u675f\uff0c\u5b83\u7684cap_group\u662f\u4e0d\u5e94\u8be5\u88ab\u91ca\u653e\u6389\u7684\u3002"}),"\n",(0,c.jsx)(e.p,{children:"\u7136\u540e\u6211\u4eec\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u7528\u6237\u6001\u8fdb\u7a0b\u9700\u8981\u4e00\u4e2avma\u7684\u5185\u6838\u8d44\u6e90, \u7c7b\u4f3c\u7684\u903b\u8f91"}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-c",children:'        vmspace = obj_alloc(TYPE_VMSPACE, sizeof(*vmspace));\n        if (!vmspace) {\n                kwarn("failed alloc vmspace in %s\\n", __func__);\n                return NULL;\n        }\n\n        /* fixed PCID 1 for root process, PCID 0 is not used. */\n        vmspace_init(vmspace, ROOT_PROCESS_PCID);\n\n        slot_id = cap_alloc(cap_group, vmspace);\n'})}),"\n",(0,c.jsx)(e.p,{children:"\u4e4b\u540e\u5c31\u662f\u7ed9cap_group\u7b80\u5355\u7684\u547d\u540d"}),"\n",(0,c.jsx)(e.p,{children:"\u800c\u53e6\u4e00\u4e2a sys_create_cap_group\uff0c\u5219\u4f5c\u4e3a\u4e00\u4e2asyscall \u7684handler\u5448\u73b0"}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-c",children:"const void *syscall_table[NR_SYSCALL] = {\n\t\t\t\t// ...\n        [CHCORE_SYS_create_cap_group] = sys_create_cap_group,\n"})}),"\n",(0,c.jsxs)(e.p,{children:[(0,c.jsxs)(e.em,{children:[(0,c.jsxs)(e.em,{children:["\u4f20\u5165\u7684 ",(0,c.jsx)(e.code,{children:"*unsigned* *long* *cap_group_args_p"})]}),"  \u5c31\u662f\u7528\u6237\u6001\u8fdb\u7a0b\u4f20\u9012\u8fc7\u6765\u7684\u5728\u5176vm\u4e0b\u7684\uff0c\u6307\u5411create_cap_group \u8fd9\u4e2a syscall \u7684\u53c2\u6570\u7684\u6307\u9488\uff08\u4ec0\u4e48\u957f\u96be\u53e5\uff09"]}),"*"]}),"\n",(0,c.jsx)(e.p,{children:"\u660e\u767d\u4e86\u8fd9\u4e2a\u4e4b\u540e\uff0c\u5b83\u7684\u903b\u8f91\u5c31\u6bd4\u8f83\u81ea\u7136\u4e86"}),"\n",(0,c.jsxs)(e.ol,{children:["\n",(0,c.jsx)(e.li,{children:"\u7528\u6237\u6001\u7684\u6307\u9488\u4e0d\u53ef\u4fe1\uff0c\u6821\u9a8c\u5176\u5730\u5740\u7a7a\u95f4\u662f\u5426\u4f38\u8fdbkernel\uff0c\u662f\u5426\u6709\u521b\u5efa\u6743\u9650"}),"\n",(0,c.jsx)(e.li,{children:"copy \u7528\u6237\u6001\u7684\u6570\u636e\u5230\u5185\u6838\uff08\u5982\u679c\u505a\u8fc7xv6\u7684lab\u5c31\u53ef\u4ee5\u53d1\u73b0\uff0c \u8fd9\u91cc\u7684\u62f7\u8d1d\u662f\u6ca1\u6709\u4f20\u9012\u7528\u6237\u6001\u7684\u9875\u8868\u7684\uff0c\u5728\u73b0\u4ee3OS\u4e4b\u4e2d\uff0c\u5185\u6838\u6001\u9875\u8868\u662f\u5305\u542b\u7528\u6237\u6001\u7684\u9875\u8868\u9879\u7684\uff0c\u6240\u4ee5copy_from_user\u53ea\u662f\u4e00\u4e2a\u7b80\u5355\u7684memcpy\u800c\u5df2\uff09"}),"\n",(0,c.jsx)(e.li,{children:"\u7c7b\u4f3c\u4e0a\u9762\u7684\u903b\u8f91\uff0calloc\u65b0\u7684cap_group\u5bf9\u8c61\uff0ccap_init\u521d\u59cb\u5316\uff0c\u6839\u636e\u4f20\u5165\u7684\u53c2\u6570\u7ed9\u51e0\u4e2a\u5c5e\u6027\u8d4b\u503c"}),"\n",(0,c.jsx)(e.li,{children:"\u65b0cap_group\u5e94\u8be5\u5e26\u4e0a\u9ed8\u8ba4\u7684cap, \u5373cap_group\u548cvmspace\uff08\u89c9\u5f97\u7ed5\u7684\u8bdd\u56de\u60f3cap\u662f\u6307\u9488\uff01\uff09"}),"\n"]}),"\n",(0,c.jsx)(e.p,{children:"\u5177\u4f53\u7684\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b\uff0c\u8fd8\u662f\u4e0d\u96be\u7684"}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-c",children:'cap_t sys_create_cap_group(unsigned long cap_group_args_p)\n{\n        struct cap_group *new_cap_group;\n        struct vmspace *vmspace;\n        cap_t cap;\n        int r;\n        struct cap_group_args args = {0};\n\n        r = hook_sys_create_cap_group(cap_group_args_p);\n        if (r != 0) return r;\n\n        if (check_user_addr_range((vaddr_t)cap_group_args_p,\n                sizeof(struct cap_group_args)) != 0)\n                return -EINVAL;\n\n        r = copy_from_user(&args, (void *)cap_group_args_p, sizeof(struct cap_group_args));\n        if (r) {\n                return -EINVAL;\n        }\n\n#ifdef CHCORE_OPENTRUSTEE\n        if (check_user_addr_range((vaddr_t)args.puuid,\n                sizeof(TEE_UUID)) != 0)\n                return -EINVAL;\n#endif /* CHCORE_OPENTRUSTEE */\n\n        if (check_user_addr_range((vaddr_t)args.name, (size_t)args.name_len) != 0)\n                return -EINVAL;\n\n        /* cap current cap_group */\n        new_cap_group = obj_alloc(TYPE_CAP_GROUP, sizeof(*new_cap_group));\n        if (!new_cap_group) {\n                r = -ENOMEM;\n                goto out_fail;\n        }\n        cap_group_init(new_cap_group, BASE_OBJECT_NUM, args.badge);\n\tnew_cap_group->pid = args.pid;\n#ifdef CHCORE_OPENTRUSTEE\n        new_cap_group->heap_size_limit = args.heap_size;\n\t/* pid used in OH-TEE */\n        if (args.puuid) {\n                copy_from_user(&new_cap_group->uuid, (void *)args.puuid, sizeof(TEE_UUID));\n        } else {\n                memset(&new_cap_group->uuid, 0, sizeof(TEE_UUID));\n        }\n#endif /* CHCORE_OPENTRUSTEE */\n\n        cap = cap_alloc(current_cap_group, new_cap_group);\n        if (cap < 0) {\n                r = cap;\n                goto out_free_obj_new_grp;\n        }\n\n        /* 1st cap is cap_group */\n        if (cap_copy(current_thread->cap_group,\n                     new_cap_group,\n                     cap,\n                     CAP_RIGHT_NO_RIGHTS,\n                     CAP_RIGHT_NO_RIGHTS)\n            != CAP_GROUP_OBJ_ID) {\n                kwarn("%s: cap_copy fails or cap[0] is not cap_group\\n", __func__);\n                r = -ECAPBILITY;\n                goto out_free_cap_grp_current;\n        }\n\n        /* 2st cap is vmspace */\n        vmspace = obj_alloc(TYPE_VMSPACE, sizeof(*vmspace));\n        if (!vmspace) {\n                r = -ENOMEM;\n                goto out_free_obj_vmspace;\n        }\n\n        vmspace_init(vmspace, args.pcid);\n\n        r = cap_alloc(new_cap_group, vmspace);\n        if (r != VMSPACE_OBJ_ID) {\n                kwarn("%s: cap_copy fails or cap[1] is not vmspace\\n", __func__);\n                r = -ECAPBILITY;\n                goto out_free_obj_vmspace;\n        }\n\n        new_cap_group->notify_recycler = 0;\n\n        /* Set the cap_group_name (process_name) for easing debugging */\n        memset(new_cap_group->cap_group_name, 0, MAX_GROUP_NAME_LEN + 1);\n        if (args.name_len > MAX_GROUP_NAME_LEN)\n                args.name_len = MAX_GROUP_NAME_LEN;\n        \n        r = copy_from_user(new_cap_group->cap_group_name,\n                           (void *)args.name,\n                           args.name_len);\n        if (r) {\n                r = -EINVAL;\n                goto out_free_obj_vmspace;\n        }\n\n        return cap;\nout_free_obj_vmspace:\n        obj_free(vmspace);\nout_free_cap_grp_current:\n        cap_free(current_cap_group, cap);\n        new_cap_group = NULL;\nout_free_obj_new_grp:\n        obj_free(new_cap_group);\nout_fail:\n        return r;\n}\n'})})]})}function l(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,c.jsx)(e,{...n,children:(0,c.jsx)(i,{...n})}):i(n)}},62324:(n,e,t)=>{t.d(e,{A:()=>c});const c=t.p+"assets/images/image-e932b0d4fdbfec16d525ae47ffeb5c01.png"},28453:(n,e,t)=>{t.d(e,{R:()=>_,x:()=>a});var c=t(96540);const r={},s=c.createContext(r);function _(n){const e=c.useContext(s);return c.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:_(n.components),c.createElement(s.Provider,{value:e},n.children)}}}]);