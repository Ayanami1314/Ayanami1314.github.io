"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5165],{74189:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var r=t(74848),i=t(28453);const a={},c=void 0,o={id:"Chcore\u6e90\u7801\u9605\u8bfb/\u591a\u6838\u652f\u6301\u4e0e\u8c03\u5ea6/\u591a\u6838\u652f\u6301",title:"\u591a\u6838\u652f\u6301",description:"\u5728\u5b9e\u9a8c1\u4e2d\u6211\u4eec\u5df2\u7ecf\u4ecb\u7ecd\uff0c\u5728QEMU\u6a21\u62df\u7684\u6811\u8393\u6d3e\u4e2d\uff0c\u6240\u6709CPU\u6838\u5fc3\u5728\u5f00\u673a\u65f6\u4f1a\u88ab\u540c\u65f6\u542f\u52a8\u3002\u5728\u5f15\u5bfc\u65f6\u8fd9\u4e9b\u6838\u5fc3\u4f1a\u88ab\u5206\u4e3a\u4e24\u79cd\u7c7b\u578b\u3002\u4e00\u4e2a\u6307\u5b9a\u7684CPU\u6838\u5fc3\u4f1a\u5f15\u5bfc\u6574\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u548c\u521d\u59cb\u5316\u81ea\u8eab\uff0c\u88ab\u79f0\u4e3aCPU\u4e3b\u6838\uff08primary CPU\uff09\u3002\u5176\u4ed6\u7684CPU\u6838\u5fc3\u53ea\u521d\u59cb\u5316\u81ea\u8eab\u5373\u53ef\uff0c\u88ab\u79f0\u4e3aCPU\u4ece\u6838\uff08backup CPU\uff09\u3002CPU\u6838\u5fc3\u4ec5\u5728\u7cfb\u7edf\u5f15\u5bfc\u65f6\u6709\u6240\u533a\u5206\uff0c\u5728\u5176\u4ed6\u9636\u6bb5\uff0c\u6bcf\u4e2aCPU\u6838\u5fc3\u90fd\u662f\u88ab\u76f8\u540c\u5bf9\u5f85\u7684\u3002",source:"@site/docs/Chcore\u6e90\u7801\u9605\u8bfb/\u591a\u6838\u652f\u6301\u4e0e\u8c03\u5ea6/\u591a\u6838\u652f\u6301.md",sourceDirName:"Chcore\u6e90\u7801\u9605\u8bfb/\u591a\u6838\u652f\u6301\u4e0e\u8c03\u5ea6",slug:"/Chcore\u6e90\u7801\u9605\u8bfb/\u591a\u6838\u652f\u6301\u4e0e\u8c03\u5ea6/\u591a\u6838\u652f\u6301",permalink:"/docs/Chcore\u6e90\u7801\u9605\u8bfb/\u591a\u6838\u652f\u6301\u4e0e\u8c03\u5ea6/\u591a\u6838\u652f\u6301",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"notesSidebar",previous:{title:"\u94f6\u674f\u53f6\u4e66 chapter 5",permalink:"/docs/Chcore\u6e90\u7801\u9605\u8bfb/\u5185\u5b58\u5206\u914d\u5668/\u53c2\u8003-\u94f6\u674f\u53f6\u4e66chapter5\u7b14\u8bb0"},next:{title:"\u591a\u6838\u8c03\u5ea6",permalink:"/docs/Chcore\u6e90\u7801\u9605\u8bfb/\u591a\u6838\u652f\u6301\u4e0e\u8c03\u5ea6/\u591a\u6838\u8c03\u5ea6"}},s={},d=[];function l(e){const n={a:"a",blockquote:"blockquote",code:"code",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"\u5728\u5b9e\u9a8c1\u4e2d\u6211\u4eec\u5df2\u7ecf\u4ecb\u7ecd\uff0c\u5728QEMU\u6a21\u62df\u7684\u6811\u8393\u6d3e\u4e2d\uff0c\u6240\u6709CPU\u6838\u5fc3\u5728\u5f00\u673a\u65f6\u4f1a\u88ab\u540c\u65f6\u542f\u52a8\u3002\u5728\u5f15\u5bfc\u65f6\u8fd9\u4e9b\u6838\u5fc3\u4f1a\u88ab\u5206\u4e3a\u4e24\u79cd\u7c7b\u578b\u3002\u4e00\u4e2a\u6307\u5b9a\u7684CPU\u6838\u5fc3\u4f1a\u5f15\u5bfc\u6574\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u548c\u521d\u59cb\u5316\u81ea\u8eab\uff0c\u88ab\u79f0\u4e3aCPU\u4e3b\u6838\uff08primary CPU\uff09\u3002\u5176\u4ed6\u7684CPU\u6838\u5fc3\u53ea\u521d\u59cb\u5316\u81ea\u8eab\u5373\u53ef\uff0c\u88ab\u79f0\u4e3aCPU\u4ece\u6838\uff08backup CPU\uff09\u3002CPU\u6838\u5fc3\u4ec5\u5728\u7cfb\u7edf\u5f15\u5bfc\u65f6\u6709\u6240\u533a\u5206\uff0c\u5728\u5176\u4ed6\u9636\u6bb5\uff0c\u6bcf\u4e2aCPU\u6838\u5fc3\u90fd\u662f\u88ab\u76f8\u540c\u5bf9\u5f85\u7684\u3002"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"\u601d\u8003\u9898 1"})}),"\n",(0,r.jsxs)(n.p,{children:["\u9605\u8bfb",(0,r.jsx)(n.code,{children:"Lab1"}),"\u4e2d\u7684\u6c47\u7f16\u4ee3\u7801kernel/arch/aarch64/boot/raspi3/init/start.S\u3002\u8bf4\u660eChCore\u662f\u5982\u4f55\u9009\u5b9a\u4e3bCPU\uff0c\u5e76\u963b\u585e\u5176\u4ed6\u5176\u4ed6CPU\u7684\u6267\u884c\u7684\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"\u5728Lab1\u4e4b\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u8be6\u7ec6\u7684\u8ba8\u8bba\u4e86\u8fd9\u4e00\u70b9\uff0c\u8fd9\u91cc\u4ec5\u7b80\u5355\u590d\u8ff0"}),"\n",(0,r.jsx)(n.p,{children:"\u4e3b\u6838\u6052\u4e3acpu 0, \u5728start.S\u4e4b\u4e2d\u6211\u4eec\u6bd4\u8f83\u5f53\u524dcpu id\u548c0\uff0c\u5982\u679c\u662f0\u6838\u5c31\u8df3\u8fdbprimary\u6267\u884cinit_c"}),"\n",(0,r.jsx)(n.p,{children:"\u4ece\u6838\u5148\u662f\u5faa\u73af\u7b49\u5f85bss cleared, \u518d\u5faa\u73af\u7b49\u5f85smp enable"}),"\n",(0,r.jsx)(n.p,{children:"\u4e3b\u6838\u5728init_c\u521d\u59cb\u5316uart\u4e4b\u540e\u5c31\u7528sev\u6307\u4ee4\u5524\u9192\u5176\u4ed6\u6838\uff0c\u4e4b\u540e\u8fdb\u5165start kernel\uff0c\u521d\u59cb\u5316cpu\u5185\u6838\u6808\u3001\u6e05\u7a7a\u9875\u8868\u548cTLB\u8bbe\u7f6e\u540e\u8fdb\u5165main, \u5728main\u4e4b\u4e2d\u521d\u59cb\u5316\u4e86\u9501\uff0cuart\uff0ccpu info \u5185\u5b58\u7ba1\u7406mm, \u5185\u6838\u9875\u8868kernel pagetable, \u8c03\u5ea6\u5668\u7b49\u4e4b\u540eenable smp\uff0c\u6b64\u65f6\u5176\u4ed6\u6838\u901a\u8fc7secondary init\u521d\u59cb\u5316\u81ea\u5df1\u7684cpu info\u548ckernel stack\u4e4b\u540e\u8ba9\u51facpu, \u8fdb\u5165\u8c03\u5ea6\uff0c\u4e4b\u540e\u7531\u4e3b\u6838\u8d1f\u8d23\u521b\u5efa\u7b2c\u4e00\u4e2a\u7528\u6237\u6001\u7ebf\u7a0b\uff0c\u5b8c\u6bd5\u540e\u5168\u90e8\u8fdb\u5165\u8c03\u5ea6"}),"\n",(0,r.jsx)(n.p,{children:"Q: \u53ef\u4ee5\u770b\u5230\uff0c\u6b64\u65f6\u4ececpu\u8fd8\u6ca1\u6709\u7b49\u5f85\u7684\u7ebf\u7a0b\uff0c\u8c03\u5ea6\u7ed9\u8c01\u5462\uff1f"}),"\n",(0,r.jsxs)(n.p,{children:["A: \u8c03\u5ea6\u7ed9\u81ea\u5df1\uff0c\u5e76\u4e14\u4f1a\u6709idle\u4f18\u5316\uff0c\u8fd9\u662f\u4eff\u7167linux\u505a\u7684\u4f18\u5316(ref: ",(0,r.jsx)(n.a,{href:"https://www.cnblogs.com/doitjust/p/13307378.html)%EF%BC%8C%E4%BB%A5policy_rr%E8%B0%83%E5%BA%A6%E7%AD%96%E7%95%A5%E4%B8%BA%E4%BE%8B",children:"https://www.cnblogs.com/doitjust/p/13307378.html)\uff0c\u4ee5policy_rr\u8c03\u5ea6\u7b56\u7565\u4e3a\u4f8b"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:"struct thread *rr_sched_choose_thread(void)\n{\n        unsigned int cpuid = smp_get_cpu_id();\n        struct thread *thread = NULL;\n\n        if (!list_empty(&(rr_ready_queue_meta[cpuid].queue_head))) {\n                lock(&(rr_ready_queue_meta[cpuid].queue_lock));\n        again:\n                if (list_empty(&(rr_ready_queue_meta[cpuid].queue_head))) {\n                        unlock(&(rr_ready_queue_meta[cpuid].queue_lock));\n                        goto out;\n                }\n                /*\n                 * When the thread is just moved from another cpu and\n                 * the kernel stack is used by the origina core, try\n                 * to find another thread.\n                 */\n                if (!(thread = find_runnable_thread(\n                              &(rr_ready_queue_meta[cpuid].queue_head)))) {\n                        unlock(&(rr_ready_queue_meta[cpuid].queue_lock));\n                        goto out;\n                }\n\n                BUG_ON(__rr_sched_dequeue(thread));\n                if (thread_is_exiting(thread) || thread_is_exited(thread)) {\n                        /* Thread need to exit. Set the state to TE_EXITED */\n                        thread_set_exited(thread);\n                        goto again;\n                }\n                unlock(&(rr_ready_queue_meta[cpuid].queue_lock));\n                return thread;\n        }\nout:\n        return &idle_threads[cpuid];\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u6ce8\u610f\u5230\u5728\u7b49\u5f85\u961f\u5217\u4e3a\u7a7a\u7684\u65f6\u5019\uff0c\u4f1a\u8fdb\u5165out\uff0c\u8fd4\u56de\u4e00\u4e2aidle_thread"}),"\n",(0,r.jsx)(n.p,{children:"\u5b83\u7684ctx\u5728idle_thread_routine\u5904\uff0c\u8fd9\u4e2a\u51fd\u6570\u662f\u4f53\u7cfb\u7ed3\u6784\u76f8\u5173\u7684\uff0c\u65e8\u5728\u9632\u6b62cpu\u7a7a\u8f6c\u964d\u4f4e\u529f\u8017"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:"/* Arch-dependent func declaraions, which are defined in assembly files */\nextern void idle_thread_routine(void);\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u5728arm\u67b6\u6784\u4e2d\u662fwfi\u6307\u4ee4\uff0c\u8ba9cpu\u8fdb\u5165\u4f4e\u529f\u8017\u72b6\u6001\uff0c\u5728\u67d0\u4e9b\u7248\u672c\u4e2d\u7684\u5b9e\u73b0\u662f\u5173\u95ed\u51e0\u4e4e\u6240\u6709\u7684\u65f6\u949f"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-nasm",children:"BEGIN_FUNC(idle_thread_routine)\nidle:   wfi\n        b idle\nEND_FUNC(idle_thread_routine)\n\n"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["\u9605\u8bfb\u6c47\u7f16\u4ee3\u7801",(0,r.jsx)(n.code,{children:"kernel/arch/aarch64/boot/raspi3/init/start.S"}),", init_c.c\u4ee5\u53cakernel/arch/aarch64/main.c\uff0c\u89e3\u91ca\u7528\u4e8e\u963b\u585e\u5176\u4ed6CPU\u6838\u5fc3\u7684secondary_boot_flag\u662f\u7269\u7406\u5730\u5740\u8fd8\u662f\u865a\u62df\u5730\u5740\uff1f\u662f\u5982\u4f55\u4f20\u5165\u51fd\u6570",(0,r.jsx)(n.code,{children:"enable_smp_cores"}),"\u4e2d\uff0c\u53c8\u662f\u5982\u4f55\u8d4b\u503c\u7684\uff08\u8003\u8651\u865a\u62df\u5730\u5740/\u7269\u7406\u5730\u5740\uff09\uff1f"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"\u7269\u7406\u5730\u5740\uff0c\u5728\u542f\u7528\u5185\u6838\u9875\u8868\u6620\u5c04\u524d\u5c31\u4f7f\u7528\u4e86secondary_boot_flag"}),"\n",(0,r.jsx)(n.p,{children:"secondary_boot_flag\u5b9e\u9645\u4e0a\u662f\u4f5c\u4e3akernel .data \u6bb5\u7684\u4e00\u4e2a\u5730\u5740\u88ab\u52a0\u8f7d\u7684"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:"// kernel/arch/aarch64/boot/raspi3/init/init_c.c\n/*\n * Initialize these varibles in order to make them not in .bss section.\n * So, they will have concrete initial value even on real machine.\n *\n * Non-primary CPUs will spin until they see the secondary_boot_flag becomes\n * non-zero which is set in kernel (see enable_smp_cores).\n *\n * The secondary_boot_flag is initilized as {NOT_BSS, 0, 0, ...}.\n */\n#define NOT_BSS (0xBEEFUL)\nlong secondary_boot_flag[PLAT_CPU_NUMBER] = {NOT_BSS}; // 0xBEEFUL\nvolatile u64 clear_bss_flag = NOT_BSS;\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u800c\u5728mmu.c\u521d\u59cb\u5316kernel pagetable\u542f\u7528mmc\u4e4b\u540e\uff0c\u53d8\u6210\u4e86\u865a\u62df\u5730\u5740"}),"\n",(0,r.jsx)(n.p,{children:"\u6240\u4ee5\u5728enable_smp_cores\u4e4b\u4e2d\u518d\u6b21\u4f7f\u7528\u65f6\u9700\u8981\u4e00\u6b21phys_to_virt\u8f6c\u6362"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:'void enable_smp_cores(paddr_t boot_flag)\n{\n\tint i = 0;\n\tlong *secondary_boot_flag;\n\n\t/* Set current cpu status */\n\tcpu_status[smp_get_cpu_id()] = cpu_run;\n\tsecondary_boot_flag = (long *)phys_to_virt(boot_flag);\n\tfor (i = 0; i < PLAT_CPU_NUM; i++) {\n\t\tsecondary_boot_flag[i] = 1;\n\t\tflush_dcache_area((u64) secondary_boot_flag,\n\t\t\t\t  (u64) sizeof(u64) * PLAT_CPU_NUM);\n\t\tasm volatile ("dsb sy");\n\t\twhile (cpu_status[i] == cpu_hang)\n\t\t;\n\t\tkinfo("CPU %d is active\\n", i);\n\t}\n\t/* wait all cpu to boot */\n\tkinfo("All %d CPUs are active\\n", PLAT_CPU_NUM);\n\tinit_ipi_data();\n}\n'})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>o});var r=t(96540);const i={},a=r.createContext(i);function c(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);