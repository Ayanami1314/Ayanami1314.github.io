"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4563],{31434:(t,n,e)=>{e.r(n),e.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>_,frontMatter:()=>l,metadata:()=>x,toc:()=>o});var r=e(74848),s=e(28453);const l={},i=void 0,x={id:"Chcore\u6e90\u7801\u9605\u8bfb/\u5f02\u5e38\u7ba1\u7406/\u5f02\u5e38\u7ba1\u7406",title:"\u5f02\u5e38\u7ba1\u7406",description:"\u524d\u7f6e\u77e5\u8bc6: arm ABI",source:"@site/docs/Chcore\u6e90\u7801\u9605\u8bfb/\u5f02\u5e38\u7ba1\u7406/\u5f02\u5e38\u7ba1\u7406.md",sourceDirName:"Chcore\u6e90\u7801\u9605\u8bfb/\u5f02\u5e38\u7ba1\u7406",slug:"/Chcore\u6e90\u7801\u9605\u8bfb/\u5f02\u5e38\u7ba1\u7406/",permalink:"/docs/Chcore\u6e90\u7801\u9605\u8bfb/\u5f02\u5e38\u7ba1\u7406/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"notesSidebar",previous:{title:"\u591a\u6838\u8c03\u5ea6",permalink:"/docs/Chcore\u6e90\u7801\u9605\u8bfb/\u591a\u6838\u652f\u6301\u4e0e\u8c03\u5ea6/\u591a\u6838\u8c03\u5ea6"},next:{title:"POSIX",permalink:"/docs/Chcore\u6e90\u7801\u9605\u8bfb/\u6587\u4ef6\u7cfb\u7edf/POSIX"}},c={},o=[{value:"\u524d\u7f6e\u77e5\u8bc6: arm ABI",id:"\u524d\u7f6e\u77e5\u8bc6-arm-abi",level:3}];function p(t){const n={a:"a",blockquote:"blockquote",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...t.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h3,{id:"\u524d\u7f6e\u77e5\u8bc6-arm-abi",children:"\u524d\u7f6e\u77e5\u8bc6: arm ABI"}),"\n",(0,r.jsx)(n.p,{children:"\u5728ARM\u7684C ABI\u4e2d\uff0c\u51fd\u6570\u53c2\u6570\u786e\u5b9e\u662f\u901a\u8fc7\u5bc4\u5b58\u5668x0, x1, x2\u7b49\u4f20\u9012\u7684\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u524d\u516d\u4e2a\u6574\u6570\u6216\u6307\u9488\u7c7b\u578b\u7684\u53c2\u6570\u4f1a\u4f9d\u6b21\u5b58\u653e\u5728x0\u5230x5\u5bc4\u5b58\u5668\u4e2d\u3002\u5982\u679c\u53c2\u6570\u4e2a\u6570\u8d85\u8fc7\u516d\u4e2a\uff0c\u90a3\u4e48\u8d85\u51fa\u7684\u53c2\u6570\u5c06\u901a\u8fc7\u6808\u6765\u4f20\u9012\u3002"}),"\n",(0,r.jsx)(n.p,{children:"\u5bf9\u4e8e\u8fd4\u56de\u503c\uff0c\u5982\u679c\u662f\u5355\u4e2a\u6574\u6570\u6216\u8f83\u5c0f\u7684\u6570\u636e\u7c7b\u578b\uff0c\u901a\u5e38\u76f4\u63a5\u4f7f\u7528x0\u5bc4\u5b58\u5668\u6765\u8fd4\u56de\u3002\u5982\u679c\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u590d\u5408\u7c7b\u578b\uff08\u5373\u5927\u5c0f\u8d85\u8fc74\u4e2a\u5b57\u8282\u7684\u6570\u636e\uff09\uff0c\u5219\u8fd4\u56de\u503c\u4f1a\u88ab\u5b58\u50a8\u5728\u5185\u5b58\u4e2d\uff0c\u5e76\u901a\u8fc7x0\u5bc4\u5b58\u5668\u4f20\u9012\u6307\u5411\u8be5\u5185\u5b58\u7684\u6307\u9488\u3002\u5bf9\u4e8e\u66f4\u5927\u7684\u7ed3\u6784\u4f53\uff0c\u7279\u522b\u662f\u8d85\u8fc716\u5b57\u8282\u7684\u7ed3\u6784\u4f53\uff0c\u8fd4\u56de\u503c\u4f1a\u88ab\u5199\u5165\u901a\u8fc7x8\uff08XR\uff09\u5bc4\u5b58\u5668\u6307\u5411\u7684\u5185\u5b58\u4f4d\u7f6e\u3002"}),"\n",(0,r.jsx)(n.p,{children:"\u7406\u89e3\u8fd9\u4e2a\u5bf9\u6211\u4eec\u7ee7\u7eed\u63a2\u7d22\u6c47\u7f16\u4e0eC\u7684\u63a5\u53e3\u4f1a\u6709\u5e2e\u52a9"}),"\n",(0,r.jsx)(n.p,{children:"\u5148\u653e\u4e00\u4e2a\u5168\u91cf\u7684\u4ee3\u7801"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:'/*\n * Copyright (c) 2023 Institute of Parallel And Distributed Systems (IPADS), Shanghai Jiao Tong University (SJTU)\n * Licensed under the Mulan PSL v2.\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\n * You may obtain a copy of Mulan PSL v2 at:\n *     http://license.coscl.org.cn/MulanPSL2\n * THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND, EITHER EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT, MERCHANTABILITY OR FIT FOR A PARTICULAR\n * PURPOSE.\n * See the Mulan PSL v2 for more details.\n */\n\n#include <common/asm.h>\n#include <common/debug.h>\n#include <common/vars.h>\n#include <arch/machine/registers.h>\n#include <arch/machine/esr.h>\n#include <arch/machine/smp.h>\n\n#include "irq_entry.h"\n\n.extern syscall_table\n.extern hook_syscall\n.extern finish_switch\n.extern do_pending_resched\n\n.macro\texception_entry\tlabel\n\t/* Each entry of the exeception table should be 0x80 aligned */\n\t.align\t7\n\tb\t\\label\n.endm\n\n/* See more details about the bias in registers.h */\n.macro\texception_enter\n\tsub\tsp, sp, #ARCH_EXEC_CONT_SIZE\n\tstp\tx0, x1, [sp, #16 * 0]\n\tstp\tx2, x3, [sp, #16 * 1]\n\tstp\tx4, x5, [sp, #16 * 2]\n\tstp\tx6, x7, [sp, #16 * 3]\n\tstp\tx8, x9, [sp, #16 * 4]\n\tstp\tx10, x11, [sp, #16 * 5]\n\tstp\tx12, x13, [sp, #16 * 6]\n\tstp\tx14, x15, [sp, #16 * 7]\n\tstp\tx16, x17, [sp, #16 * 8]\n\tstp\tx18, x19, [sp, #16 * 9]\n\tstp\tx20, x21, [sp, #16 * 10]\n\tstp\tx22, x23, [sp, #16 * 11]\n\tstp\tx24, x25, [sp, #16 * 12]\n\tstp\tx26, x27, [sp, #16 * 13]\n\tstp\tx28, x29, [sp, #16 * 14]\n\tmrs\tx21, sp_el0\n\tmrs\tx22, elr_el1\n\tmrs\tx23, spsr_el1\n\tstp\tx30, x21, [sp, #16 * 15]\n\tstp\tx22, x23, [sp, #16 * 16]\n.endm\n\n.macro\texception_exit\n\tldp\tx22, x23, [sp, #16 * 16]\n\tldp\tx30, x21, [sp, #16 * 15] \n\tmsr\tsp_el0, x21\n\tmsr\telr_el1, x22\n\tmsr\tspsr_el1, x23\n\tldp\tx0, x1, [sp, #16 * 0]\n\tldp\tx2, x3, [sp, #16 * 1]\n\tldp\tx4, x5, [sp, #16 * 2]\n\tldp\tx6, x7, [sp, #16 * 3]\n\tldp\tx8, x9, [sp, #16 * 4]\n\tldp\tx10, x11, [sp, #16 * 5]\n\tldp\tx12, x13, [sp, #16 * 6]\n\tldp\tx14, x15, [sp, #16 * 7]\n\tldp\tx16, x17, [sp, #16 * 8]\n\tldp\tx18, x19, [sp, #16 * 9]\n\tldp\tx20, x21, [sp, #16 * 10]\n\tldp\tx22, x23, [sp, #16 * 11]\n\tldp\tx24, x25, [sp, #16 * 12]\n\tldp\tx26, x27, [sp, #16 * 13]\n\tldp\tx28, x29, [sp, #16 * 14]\n\n\tadd\tsp, sp, #ARCH_EXEC_CONT_SIZE\n\teret\n.endm\n\n.macro switch_to_cpu_stack\n\tmrs     x24, TPIDR_EL1\n\tadd\tx24, x24, #OFFSET_LOCAL_CPU_STACK\n\tldr\tx24, [x24]\n\tmov\tsp, x24\n.endm\n\n.macro switch_to_thread_ctx\n\tmrs     x24, TPIDR_EL1\n\tadd\tx24, x24, #OFFSET_CURRENT_EXEC_CTX\n\tldr\tx24, [x24]\n\tmov\tsp, x24\n.endm\n\n/*\n * Vector table offsets from vector table base address from ARMv8 Manual\n *\tAddress\t\t|\tException Type\t\t| \tDescription\n * ============================================================================\n *\tVBAR_Eln+0x000\t|\t Synchronous\t\t|\t SPSel=0\n * \t\t+0x080\t|\t  IRQ/vIRQ\t\t|\tCurrent EL\n *\t\t+0x100\t|\t  FIQ/vFIQ\t\t|   with Stack Pointer\n * \t\t+0x180\t|\tSError/vSError\t\t|    shared with EL0\n * ============================================================================\n *\tVBAR_Eln+0x200\t|\t Synchronous\t\t|\t SPSel=1\n * \t\t+0x280\t|\t  IRQ/vIRQ\t\t|\tCurrent EL\n *\t\t+0x300\t|\t  FIQ/vFIQ\t\t|   with dedicated\n * \t\t+0x380\t|\tSError/vSError\t\t|    Stack Pointer\n * ============================================================================\n *\tVBAR_Eln+0x400\t|\t Synchronous\t\t|\n * \t\t+0x480\t|\t  IRQ/vIRQ\t\t|\tLower EL\n *\t\t+0x500\t|\t  FIQ/vFIQ\t\t|    using AArch64\n * \t\t+0x580\t|\tSError/vSError\t\t|\n * ============================================================================\n *\tVBAR_Eln+0x600\t|\t Synchronous\t\t|\n * \t\t+0x680\t|\t  IRQ/vIRQ\t\t|     \tLower EL\n *\t\t+0x700\t|\t  FIQ/vFIQ\t\t|    using AArch32\n * \t\t+0x780\t|\tSError/vSError\t\t|\n * ============================================================================\n */\n\n/* el1_vector should be set in VBAR_EL1. The last 11 bits of VBAR_EL1 are reserved. */\n.align\t11\nEXPORT(el1_vector)\n\texception_entry\tsync_el1t\t\t// Synchronous EL1t\n\texception_entry\tirq_el1t\t\t// IRQ EL1t\n\texception_entry\tfiq_el1t\t\t// FIQ EL1t\n\texception_entry\terror_el1t\t\t// Error EL1t\n\n\texception_entry\tsync_el1h\t\t// Synchronous EL1h\n\texception_entry\tirq_el1h\t\t// IRQ EL1h\n\texception_entry\tfiq_el1h\t\t// FIQ EL1h\n\texception_entry\terror_el1h\t\t// Error EL1h\n\n\texception_entry\tsync_el0_64\t\t// Synchronous 64-bit EL0\n\texception_entry\tirq_el0_64\t\t// IRQ 64-bit EL0\n\texception_entry\tfiq_el0_64\t\t// FIQ 64-bit EL0\n\texception_entry\terror_el0_64\t\t// Error 64-bit EL0\n\n\texception_entry\tsync_el0_32\t\t// Synchronous 32-bit EL0\n\texception_entry\tirq_el0_32\t\t// IRQ 32-bit EL0\n\texception_entry\tfiq_el0_32\t\t// FIQ 32-bit EL0\n\texception_entry\terror_el0_32\t\t// Error 32-bit EL0\n\n/*\n * The selected stack pointer can be indicated by a suffix to the Exception Level:\n *  - t: SP_EL0 is used\n *  - h: SP_ELx is used\n *\n * ChCore does not enable or handle irq_el1t, fiq_xxx, and error_xxx.\n * The SPSR_EL1 of idle threads is set to 0b0101, which means interrupt\n * are enabled during the their execution and SP_EL1 is selected (h).\n * Thus, irq_el1h is enabled and handled.\n *\n * Similarly, sync_el1t is also not enabled while we simply reuse the handler for\n * sync_el0 to handle sync_el1h (e.g., page fault during copy_to_user and fpu).\n */\n\nirq_el1h:\n        /* Simply reusing exception_enter/exit is OK. */\n\texception_enter\n#ifndef CHCORE_KERNEL_RT\n\tswitch_to_cpu_stack\n#endif\n\tbl\thandle_irq_el1\n\t/* should never reach here */\n\tb .\n\nirq_el1t:\nfiq_el1t:\nfiq_el1h:\nerror_el1t:\nerror_el1h:\nsync_el1t:\n\tbl unexpected_handler\n\nsync_el1h:\n\texception_enter\n\tmov\tx0, #SYNC_EL1h\n\tmrs\tx1, esr_el1\n\tmrs\tx2, elr_el1\n\tbl\thandle_entry_c\n\tstr     x0, [sp, #16 * 16] /* store the return value as the ELR_EL1 */\n\texception_exit\n\nsync_el0_64:\n\texception_enter\n#ifndef CHCORE_KERNEL_RT\n\tswitch_to_cpu_stack\n#endif\n\tmrs\tx25, esr_el1\n\tlsr\tx24, x25, #ESR_EL1_EC_SHIFT\n\tcmp\tx24, #ESR_EL1_EC_SVC_64\n\tb.eq\tel0_syscall\n\tmov\tx0, SYNC_EL0_64 \n\tmrs\tx1, esr_el1\n\tmrs\tx2, elr_el1\n\tbl\thandle_entry_c\n#ifdef CHCORE_KERNEL_RT\n\tbl\tdo_pending_resched\n#else\n\tswitch_to_thread_ctx\n#endif\n\texception_exit\n\nel0_syscall:\n\n/* hooking syscall: ease tracing or debugging */\n#if ENABLE_HOOKING_SYSCALL == ON\n\tsub\tsp, sp, #16 * 8\n\tstp\tx0, x1, [sp, #16 * 0]\n\tstp\tx2, x3, [sp, #16 * 1]\n\tstp\tx4, x5, [sp, #16 * 2]\n\tstp\tx6, x7, [sp, #16 * 3]\n\tstp\tx8, x9, [sp, #16 * 4]\n\tstp\tx10, x11, [sp, #16 * 5]\n\tstp\tx12, x13, [sp, #16 * 6]\n\tstp\tx14, x15, [sp, #16 * 7]\n\t\n\tmov x0, x8\n\tbl hook_syscall\n\n\tldp\tx0, x1, [sp, #16 * 0]\n\tldp\tx2, x3, [sp, #16 * 1]\n\tldp\tx4, x5, [sp, #16 * 2]\n\tldp\tx6, x7, [sp, #16 * 3]\n\tldp\tx8, x9, [sp, #16 * 4]\n\tldp\tx10, x11, [sp, #16 * 5]\n\tldp\tx12, x13, [sp, #16 * 6]\n\tldp\tx14, x15, [sp, #16 * 7]\n\tadd\tsp, sp, #16 * 8\n#endif\n\n\tadr\tx27, syscall_table\t\t// syscall table in x27\n\tuxtw\tx16, w8\t\t\t\t// syscall number in x16\n\tldr\tx16, [x27, x16, lsl #3]\t\t// find the syscall entry\n\tblr\tx16\n\n\t/* Ret from syscall */\n\t// bl\tdisable_irq\n#ifdef CHCORE_KERNEL_RT\n\tstr\tx0, [sp]\n\tbl\tdo_pending_resched\n#else\n\tswitch_to_thread_ctx\n\tstr\tx0, [sp]\n#endif\n\texception_exit\n\nirq_el0_64:\n\texception_enter\n#ifndef CHCORE_KERNEL_RT\n\tswitch_to_cpu_stack\n#endif\n\tbl\thandle_irq\n\t/* should never reach here */\n\tb .\n\nerror_el0_64:\nsync_el0_32:\nirq_el0_32:\nfiq_el0_32:\nerror_el0_32:\n\tbl unexpected_handler\n\nfiq_el0_64:\n\texception_enter\n#ifndef CHCORE_KERNEL_RT\n\tswitch_to_cpu_stack\n#endif\n\tbl handle_fiq\n\t/* should never reach here */\n\tb .\n\n/* void eret_to_thread(u64 sp) */\nBEGIN_FUNC(__eret_to_thread)\n\tmov\tsp, x0\n\tdmb ish /* smp_mb() */\n#ifdef CHCORE_KERNEL_RT\n\tbl finish_switch\n#endif\n\texception_exit\nEND_FUNC(__eret_to_thread)\n\n'})}),"\n",(0,r.jsx)(n.p,{children:"\u51e0\u4e2a\u53ef\u80fd\u4f1a\u6709\u7591\u60d1\u7684\u70b9"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:".align\t7"})," \u662f\u6309\u71672^7\u5bf9\u9f50\u7684\u610f\u601d\uff0c\u4e5f\u5c31\u662f\u8868\u683c\u91cc\u9762\u7684 ",(0,r.jsx)(n.code,{children:"0x80"})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"exception_enter"})," \u548c ",(0,r.jsx)(n.code,{children:"exception_exit"})," \u7c7b\u4f3ctrampoline, \u53ea\u662f\u4fdd\u5b58\u548c\u91cd\u65b0\u53d6\u51fa\u5bc4\u5b58\u5668, \u4e24\u4e24\u4fdd\u5b58"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"\u770b\u8fd9\u4e24\u4e2a\u51fd\u6570\u4e5f\u53ef\u4ee5\u770b\u51fa\uff0c\u4e0d\u540c\u4e8exv6\u7684trampoline\u5728\u5185\u6838\u9875\u8868\u4e0a\u89c4\u5b9a\u4e86\u4e00\u4e2a\u7279\u6b8a\u7684\u4f4d\u7f6e\uff08trampoline page\uff09\u7528\u4e8e\u4fdd\u5b58\u5bc4\u5b58\u5668\uff0cchcore\u76f4\u63a5\u5c06\u5bc4\u5b58\u5668\u4fdd\u5b58\u5728\u4e86\u5185\u6838\u6808\u4e0a"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"\u4e24\u79cd\u8bbe\u8ba1\u7684\u6743\u8861"}),"\n",(0,r.jsx)(n.p,{children:"trampoline page\u5b9e\u73b0\u8d77\u6765\u8f83\u6613\uff0c\u4f46\u5982\u679c\u8981\u652f\u6301\u591a\u7ebf\u7a0b\u548c\u62a2\u5360\u5f0f\u8c03\u5ea6\uff0c\u5219\u76f8\u5bf9\u9ebb\u70e6"}),"\n",(0,r.jsx)(n.p,{children:"\u65e9\u671f Unix \u9009\u62e9 trampoline page \u4e3b\u8981\u662f\u56e0\u4e3a\u5f53\u65f6\u7684\u786c\u4ef6\u9650\u5236\uff0c\u800c\u73b0\u4ee3 ARM OS \u9009\u62e9\u5185\u6838\u6808\u662f\u56e0\u4e3a\u73b0\u4ee3\u786c\u4ef6\u7684\u8fdb\u6b65\u548c\u5bf9\u7cfb\u7edf\u5b89\u5168\u6027\u548c\u6027\u80fd\u7684\u66f4\u9ad8\u8981\u6c42\u3002\u4e24\u79cd\u65b9\u6cd5\u5404\u6709\u4f18\u52a3\uff0c\u9009\u62e9\u54ea\u79cd\u65b9\u6cd5\u9700\u8981\u6839\u636e\u5177\u4f53\u7684\u786c\u4ef6\u67b6\u6784\u548c\u64cd\u4f5c\u7cfb\u7edf\u8bbe\u8ba1\u76ee\u6807\u8fdb\u884c\u6743\u8861\u3002"}),"\n",(0,r.jsxs)(n.p,{children:["\u4e00\u4e9b\u65e9\u671f\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u4f8b\u5982 xv6-riscv\uff0c\u4ecd\u7136\u4f7f\u7528 trampoline page \u6765\u5904\u7406\u7528\u6237\u6001\u5230\u5185\u6838\u6001\u7684\u8f6c\u6362\u3002",(0,r.jsx)(n.a,{href:"https://github.com/mit-pdos/xv6-riscv/blob/riscv/kernel/trampoline.S",children:"2"}),"\xa0Linux \u5185\u6838\u4e2d\u4e5f\u4f7f\u7528\u4e86 trampoline \u7684\u6982\u5ff5\uff0c\u4f46\u5176\u4f5c\u7528\u548c\u5b9e\u73b0\u65b9\u5f0f\u4e0e\u65e9\u671f Unix \u4e2d\u7684 trampoline page \u4e0d\u540c\u3002Linux \u4e2d\u7684 trampoline \u4e3b\u8981\u7528\u4e8e\u5904\u7406\u5185\u6838\u5730\u5740\u7a7a\u95f4\u5e03\u5c40\u968f\u673a\u5316 (KASLR) \u7b49\u5b89\u5168\u7279\u6027\u3002",(0,r.jsx)(n.a,{href:"https://mxatone.medium.com/kernel-memory-randomization-and-trampoline-page-tables-9f73827270ab",children:"1"})]}),"\n",(0,r.jsx)(n.p,{children:"\u603b\u800c\u8a00\u4e4b\uff0c\u9009\u62e9 trampoline page \u8fd8\u662f\u5185\u6838\u6808\u662f\u4e00\u4e2a trade-off \u7684\u8fc7\u7a0b\u3002Trampoline page \u5b9e\u73b0\u7b80\u5355\uff0c\u8282\u7701\u5185\u5b58\uff0c\u4f46\u5b89\u5168\u6027\u8f83\u4f4e\uff0c\u96be\u4ee5\u652f\u6301\u591a\u5904\u7406\u5668\u548c\u62a2\u5360\u5f0f\u8c03\u5ea6\u3002\u5185\u6838\u6808\u5b9e\u73b0\u590d\u6742\uff0c\u5360\u7528\u5185\u5b58\u8f83\u591a\uff0c\u4f46\u5b89\u5168\u6027\u66f4\u9ad8\uff0c\u66f4\u6613\u4e8e\u652f\u6301\u591a\u5904\u7406\u5668\u548c\u62a2\u5360\u5f0f\u8c03\u5ea6\u3002\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u5927\u591a\u9009\u62e9\u5185\u6838\u6808\uff0c\u662f\u56e0\u4e3a\u73b0\u4ee3\u786c\u4ef6\u7684\u6027\u80fd\u63d0\u5347\u4f7f\u5f97\u5185\u6838\u6808\u7684\u5f00\u9500\u53ef\u4ee5\u63a5\u53d7\uff0c\u5e76\u4e14\u5185\u6838\u6808\u5e26\u6765\u7684\u5b89\u5168\u6027\u63d0\u5347\u548c\u529f\u80fd\u6269\u5c55\u66f4\u52a0\u91cd\u8981\u3002"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"C ABI\u517c\u5bb9\uff1a\u4ee5handle_entry_c\u4e3a\u4f8b\uff0c"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-nasm",children:"sync_el1h:\n\texception_enter\n\tmov\tx0, #SYNC_EL1h\n\tmrs\tx1, esr_el1\n\tmrs\tx2, elr_el1\n\tbl\thandle_entry_c\n\tstr     x0, [sp, #16 * 16] /* store the return value as the ELR_EL1 */\n\texception_exit\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:"u64 handle_entry_c(int type, u64 esr, u64 address)\n"})}),"\n",(0,r.jsx)(n.p,{children:"x0, x1, x2\u5c31\u662fc\u51fd\u6570\u7684args, \u8fd4\u56de\u503c\u7f6e\u4e8ex0, \u6b63\u5982\u524d\u9762\u7684arm ABI"}),"\n",(0,r.jsx)(n.p,{children:"\u81f3\u4e8e\u5f02\u5e38\u5411\u91cf\u8868\uff0c\u6587\u6863\u5df2\u7ecf\u8bf4\u5f97\u5f88\u6e05\u695a\u4e86"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["AArch64 \u4e2d\u7684",(0,r.jsx)(n.strong,{children:"\u6bcf\u4e2a\u5f02\u5e38\u7ea7\u522b\u90fd\u6709\u5176\u81ea\u5df1\u72ec\u7acb\u7684\u5f02\u5e38\u5411\u91cf\u8868"}),"\uff0c\u5176\u865a\u62df\u5730\u5740\u7531\u8be5\u5f02\u5e38\u7ea7\u522b\u4e0b\u7684",(0,r.jsx)(n.strong,{children:"\u5f02\u5e38\u5411\u91cf\u57fa\u5730\u5740\u5bc4\u5b58\u5668"}),"\uff08",(0,r.jsx)(n.code,{children:"VBAR_EL3"}),"\uff0c",(0,r.jsx)(n.code,{children:"VBAR_EL2"}),"\xa0\u548c\xa0",(0,r.jsx)(n.code,{children:"VBAR_EL1"}),"\uff09\u51b3\u5b9a\u3002",(0,r.jsx)(n.strong,{children:"\u6bcf\u4e2a\u5f02\u5e38\u5411\u91cf\u8868\u4e2d\u5305\u542b 16 \u4e2a\u6761\u76ee\uff0c\u6bcf\u4e2a\u6761\u76ee\u91cc\u5b58\u50a8\u7740\u53d1\u751f\u5bf9\u5e94\u5f02\u5e38\u65f6\u6240\u9700\u6267\u884c\u7684\u5f02\u5e38\u5904\u7406\u7a0b\u5e8f\u4ee3\u7801"}),"\u3002\u4ee5\u4e0a\u8868\u683c\u7ed9\u51fa\u4e86\u6bcf\u4e2a\u5f02\u5e38\u5411\u91cf\u6761\u76ee\u7684\u504f\u79fb\u91cf\u3002"]}),"\n",(0,r.jsxs)(n.p,{children:["\u5728 ChCore \u4e2d\uff0c\u4ec5\u4f7f\u7528\u4e86 EL0 \u548c EL1 \u4e24\u4e2a\u5f02\u5e38\u7ea7\u522b\uff0c\u56e0\u6b64\u4ec5\u9700\u8981\u5bf9 EL1 \u5f02\u5e38\u5411\u91cf\u8868\u8fdb\u884c\u521d\u59cb\u5316\u5373\u53ef\u3002\u5728\u672c\u5b9e\u9a8c\u4e2d\uff0cChCore \u5185",(0,r.jsx)(n.strong,{children:"\u9664\u7cfb\u7edf\u8c03\u7528\u5916\u6240\u6709\u7684\u540c\u6b65\u5f02\u5e38"}),"\u5747\u4ea4\u7531\xa0",(0,r.jsx)(n.code,{children:"handle_entry_c"}),"\xa0\u51fd\u6570\u8fdb\u884c\u5904\u7406\u3002**\u9047\u5230\u5f02\u5e38\u65f6\uff0c\u786c\u4ef6\u5c06\u6839\u636e ChCore \u7684\u914d\u7f6e\u6267\u884c\u5bf9\u5e94\u7684\u6c47\u7f16\u4ee3\u7801\uff0c\u5c06\u5f02\u5e38\u7c7b\u578b\u548c\u5f53\u524d\u5f02\u5e38\u5904\u7406\u7a0b\u5e8f\u6761\u76ee\u7c7b\u578b\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\uff0c**\u5bf9\u4e8e sync_el1h \u7c7b\u578b\u7684\u5f02\u5e38\uff0c\u8df3\u8f6c\xa0",(0,r.jsx)(n.code,{children:"handle_entry_c"}),"\xa0\u4f7f\u7528 C \u4ee3\u7801\u5904\u7406\u5f02\u5e38\u3002\u5bf9\u4e8e irq_el1t\u3001fiq_el1t\u3001fiq_el1h\u3001error_el1t\u3001error_el1h\u3001sync_el1t \u5219\u8df3\u8f6c\xa0",(0,r.jsx)(n.code,{children:"unexpected_handler"}),"\xa0\u5904\u7406\u5f02\u5e38\u3002"]}),"\n"]})]})}function _(t={}){const{wrapper:n}={...(0,s.R)(),...t.components};return n?(0,r.jsx)(n,{...t,children:(0,r.jsx)(p,{...t})}):p(t)}},28453:(t,n,e)=>{e.d(n,{R:()=>i,x:()=>x});var r=e(96540);const s={},l=r.createContext(s);function i(t){const n=r.useContext(l);return r.useMemo((function(){return"function"==typeof t?t(n):{...n,...t}}),[n,t])}function x(t){let n;return n=t.disableParentContext?"function"==typeof t.components?t.components(s):t.components||s:i(t.components),r.createElement(l.Provider,{value:n},t.children)}}}]);