"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5389],{27412:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>i,contentTitle:()=>r,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var s=t(74848),o=t(28453);const a={title:"\u7ed3\u6784\u5316\u8f93\u51fa\u4e0eAI\u5de5\u5177\u4e0eAgent",date:new Date("2025-07-29T00:00:00.000Z"),author:"ayanami",tags:["rag","ai","llm","agent"]},r=void 0,l={permalink:"/blog/\u7ed3\u6784\u5316\u8f93\u51fa",source:"@site/blog/\u7ed3\u6784\u5316\u8f93\u51fa.md",title:"\u7ed3\u6784\u5316\u8f93\u51fa\u4e0eAI\u5de5\u5177\u4e0eAgent",description:"\u5047\u5982\u5927\u4f19\u63a5\u5230\u4e00\u4e2a\u9700\u6c42\uff0c\u9700\u8981\u628aclaude code\u63a5\u5165jupyter\u524d\u7aef\uff08\u4f8b\u5982\uff0c\u5728jupyter\u524d\u7aef\u76f4\u63a5\u8f93\u5165\u9b54\u6cd5\u6307\u4ee4\u548cclaude code\u4ea4\u4e92\uff0c\u800c\u540e\u53f0claude code\u5c55\u793aclaude code\u7684\u4e00\u4e9b\u5173\u952e\u8282\u70b9\uff0c\u5de5\u5177\u8c03\u7528\uff0c\u8d39\u7528\u5f00\u9500\uff0c\u8f93\u51fa\u7ed3\u679c\u7b49\uff09\uff0c\u4f1a\u600e\u4e48\u505a\uff1f",date:"2025-07-29T00:00:00.000Z",tags:[{inline:!0,label:"rag",permalink:"/blog/tags/rag"},{inline:!0,label:"ai",permalink:"/blog/tags/ai"},{inline:!0,label:"llm",permalink:"/blog/tags/llm"},{inline:!0,label:"agent",permalink:"/blog/tags/agent"}],readingTime:16.41,hasTruncateMarker:!1,authors:[{name:"ayanami"}],frontMatter:{title:"\u7ed3\u6784\u5316\u8f93\u51fa\u4e0eAI\u5de5\u5177\u4e0eAgent",date:"2025-07-29T00:00:00.000Z",author:"ayanami",tags:["rag","ai","llm","agent"]},unlisted:!1,prevItem:{title:"Paper reading - Context Pruning and beyond hard pruning",permalink:"/blog/Paper reading Context Pruning and beyond hard pruning"},nextItem:{title:"context-engineering",permalink:"/blog/context-engineering"}},i={authorsImageUrls:[void 0]},c=[];function d(n){const e={code:"code",hr:"hr",img:"img",p:"p",pre:"pre",...(0,o.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.p,{children:"\u5047\u5982\u5927\u4f19\u63a5\u5230\u4e00\u4e2a\u9700\u6c42\uff0c\u9700\u8981\u628aclaude code\u63a5\u5165jupyter\u524d\u7aef\uff08\u4f8b\u5982\uff0c\u5728jupyter\u524d\u7aef\u76f4\u63a5\u8f93\u5165\u9b54\u6cd5\u6307\u4ee4\u548cclaude code\u4ea4\u4e92\uff0c\u800c\u540e\u53f0claude code\u5c55\u793aclaude code\u7684\u4e00\u4e9b\u5173\u952e\u8282\u70b9\uff0c\u5de5\u5177\u8c03\u7528\uff0c\u8d39\u7528\u5f00\u9500\uff0c\u8f93\u51fa\u7ed3\u679c\u7b49\uff09\uff0c\u4f1a\u600e\u4e48\u505a\uff1f"}),"\n",(0,s.jsx)(e.p,{children:"\u4e00\u79cd\u60f3\u6cd5\u662f\uff0c\u5c06claude code\u7684\u8f93\u51fa\u585e\u5230\u4e00\u4e2a\u6587\u4ef6\u91cc\u9762\u53bb\uff0c\u8d77\u4e00\u4e2a\u540e\u53f0\u7ebf\u7a0b\u8bfb\u53d6\u8fd9\u4e2a\u6587\u4ef6\uff0c\u5c1d\u8bd5\u89e3\u6790\u4e4b\u4e2d\u7684\u67d0\u4e9b\u90e8\u5206\uff0c\u518d\u4ee5\u63d2\u4ef6\u7684\u5f62\u5f0f\u52a0\u8f7d\u5230jupyter\u524d\u7aef"}),"\n",(0,s.jsx)(e.p,{children:"\u4f46\u5e26\u6765\u4e86\u4e00\u4e2a\u95ee\u9898\u662f\uff0c\u6548\u679c\uff08\u5c24\u5176\u662f\u5de5\u5177\u6570\u91cfupup\uff0c\u4e0a\u4e0b\u6587\u957f\u5ea6upup\u540e\u7684\u6548\u679c\uff09\u4e0d\u7a33\u5b9a\uff0c\u7eafprompt\u7684\u5f62\u5f0f\u7ea6\u675fclaude code\u53ca\u65f6\u5411\u8fd9\u4e2a\u6587\u4ef6\u4e2d\u5199\u5165\u4ee5\u5411\u524d\u7aef\u901a\u4fe1\uff0c\u5728\u7ecf\u8fc7\u957f\u7684\u4ea4\u4e92\u8fc7\u7a0b\u540e\uff0cclaude\u7ecf\u5e38\u4f1a\u628a\u8fd9\u4e2a\u6587\u4ef6\u5fd8\u6389"}),"\n",(0,s.jsx)(e.p,{children:"\u90a3claude code\u76f4\u63a5\u5168\u585e\u524d\u7aef\u5462\uff1f"}),"\n",(0,s.jsx)(e.p,{children:"\u5728claude code\u91cc\u9762\u95ee\u4e00\u4e2a\u95ee\u9898\uff0c\u53ef\u80fd\u5c31\u662f\u51e0\u5343\u4e0a\u4e07token\u7684\u4ea4\u4e92\uff0c\u5168\u585e\u524d\u7aef\uff0c\u90a3\u7528\u6237\u4f53\u9a8c\u5c31\u70c2\u6389\u4e86\u3002"}),"\n",(0,s.jsx)(e.p,{children:"\u53e6\u4e00\u4e2a\u5f88\u5bb9\u6613\u60f3\u5230\u7684\u65b9\u6848\u662f\uff0c\u90a3\u6211\u4eec\u4e0d\u8981\u8ba9\u4ed6\u8f93\u51fa\u6587\u4ef6\u4e86\uff0c\u76f4\u63a5\u5f53\u573a\u5904\u7406\u628a\uff0c\u5b9a\u4e49\u4e00\u4e9b\u7279\u6b8a\u5757\u53eb\ndisplay \u4e4b\u7c7b\u7684\u4e1c\u897f\uff0c\u5728prompt\u91cc\u9762\u6307\u5b9a\u8fd9\u4e2a\u5757\u91cc\u9762\u662f\u4ec0\u4e48\u683c\u5f0f\uff0c\u8ba9\u4ed6\u5982\u679c\u60f3\u8981\u548c\u524d\u7aef\u8f93\u51fa\u7684\u8bdd\uff0c\u653e\u5230\u8fd9\u4e2a\u5757\u91cc\u9762"}),"\n",(0,s.jsx)(e.p,{children:"\u8fd9\u6837\u770b\u8d77\u6765\u6bd4\u6587\u4ef6\u597d\u4e00\u4e9b\uff0c\u4f46\u5e26\u6765\u4e86\u65b0\u7684\u95ee\u9898\u6ca1\u89e3\u51b3\uff0c\u957f\u4e0a\u4e0b\u6587\u4e0b\uff0cdisplay\u5757\u7684\u7ed3\u6784\u5076\u5c14\u4f1a\u6709\u4e0d\u7a33\u5b9a\uff0c\u4f1a\u6709\u4e0d\u5c11\u7279\u6b8a\u7684\u6e32\u67d3\u683c\u5f0f\u5982html\u7b49\u7531\u4e8e\u51e0\u4e2a\u5b57\u7b26\u7684\u5dee\u5f02\u9000\u5316\u6210\u4e86\u7eaf\u6587\u672c"}),"\n",(0,s.jsx)(e.p,{children:"\u5982\u4f55\u4fee\u590d\u8fd9\u4e2a\u5462\uff1f\u4e00\u4e2a\u7b80\u5355\u7684\u65b9\u6cd5\uff0c\u4e5f\u662f\u4f60\u80fd\u5728\u4efb\u610f\u4e00\u4e2a\u73b0\u5728\u7684agent\u4e2d\u770b\u5230\u7684\uff0c\u662f\u53ca\u65f6\u5224\u9519\uff0c\u518d\u628a\u628a\u9519\u8bef\u7684\u90e8\u5206\u53d1\u7ed9\u6a21\u578b\u8ba9\u4ed6\u4fee\u590d\u4e00\u4e0b\uff0c\u4f46\u53c8\u5e26\u6765\u4e86\u989d\u5916\u7684\u5f00\u9500\uff0c\u5e76\u4e14\u524d\u7aef\u7684\u5448\u73b0\u4e5f\u6536\u5230\u5f71\u54cd"}),"\n",(0,s.jsx)(e.p,{children:"\u6709\u6ca1\u6709\u66f4\u4f18\u96c5\u7684\u529e\u6cd5\u5462\uff1f"}),"\n",(0,s.jsx)(e.p,{children:"\u5982\u679c\u4f60\u505aAI\u5e94\u7528\u6bd4\u8f83\u591a\u7684\u8bdd\uff0c\u80af\u5b9a\u6ce8\u610f\u5230\u4e86\u8fd9\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u7ed3\u6784\u5316\u8f93\u51fa(\u7ea6\u675f\u89e3\u7801)\u7684\u573a\u666f\uff0c\u4f46\u73b0\u5728\u7684\u95ee\u9898\u662f\uff0c\u8f93\u51fa\u4e0d\u6b62\u662f\u4e00\u4e2ajson\uff0c\u800c\u662f\u6b63\u5e38\u6587\u672c\u5757\u548cdisplay\u5757\u7684\u4ea4\u9519"}),"\n",(0,s.jsx)(e.p,{children:"\uff08\u5bf9\u4e8e\u4e0d\u4e86\u89e3\u7ea6\u675f\u89e3\u7801\u7684\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\uff0c\u5c31\u662f\u628a\u4e0a\u5c42\u7684json\u7b49\u7ea6\u675f\u7f16\u8bd1\u6210\u72b6\u6001\u673a\u4e4b\u540e\uff0c\u7528\u4e8e\u52a8\u6001\u5efa\u7acbllm output logits\u7684mask\uff0c\u4ece\u800c\u675c\u7edd\u8f93\u51fa\u975e\u6cd5\u8f93\u51fa\u7684\u6280\u672f\uff09"}),"\n",(0,s.jsx)(e.p,{children:"\u770b\u8d77\u6765\u4f3c\u4e4e\u4e0d\u80fd\u7ea6\u675f\u89e3\u7801\uff1f\u4f46display\u5757\u672c\u8eab\u662f\u53ef\u4ee5\u7ea6\u675f\u89e3\u7801\u7684\uff0c\u597d\u6076\u5fc3\u3002"}),"\n",(0,s.jsx)(e.p,{children:"\u8ba9\u6211\u4eec\u6253\u5f00vllm\u6587\u6863\uff0c\u7ffb\u5230 Structured Outputs\uff0c\u4f60\u4f1a\u53d1\u73b0\uff0c\u9664\u4e86\u5e38\u89c1\u7684regex\u7ea6\u675f\u89e3\u7801\u4e4b\u5916\uff0c\u8fd8\u6709\u4e24\u79cd\u66f4\u5f3a\u8bed\u4e49\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u6551\u8d4e\u4e4b\u9053\u5c31\u5728\u5176\u4e2d\uff0cebnf\u89e3\u7801\u548cstructure tags\u89e3\u7801"}),"\n",(0,s.jsx)(e.p,{children:"\u5b9e\u9645\u4e0a\uff0cjson\u89e3\u7801\u53ea\u4e0d\u8fc7\u662febnf\u89e3\u7801\u7684\u7279\u6b8a\u60c5\u51b5\u7f62\u4e86\uff0c\u6bd5\u7adf\u5b9e\u9645\u90fd\u662f\u72b6\u6001\u673a\n\uff08\u4e0d\u77e5\u9053ebnf\u662f\u4ec0\u4e48\u7684\u540c\u5b66\uff0c\u53ef\u4ee5\u641c\u7d22\u4e00\u4e0b\u7f16\u8bd1\u524d\u7aef\uff0cBNF\u8303\u5f0f\uff0c\u5c31\u80fd\u770b\u61c2\u4e0b\u9762\u7684\u793a\u4f8b\u5566\uff09"}),"\n",(0,s.jsx)(e.p,{children:"\u5b98\u65b9\u7ed9\u7684\u4e00\u4e2aebnf\u89e3\u7801\u7684\u4f8b\u5b50\u5982\u4e0b, \u7528\u4e8e\u6267\u884c\u4e00\u4e2a\u7b80\u5316sql\u7684\u7ea6\u675f\u89e3\u7801\u4ee5\u63d0\u5347sql\u6b63\u786e\u7387"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'simplified_sql_grammar = """\n    root ::= select_statement\n\n    select_statement ::= "SELECT " column " from " table " where " condition\n\n    column ::= "col_1 " | "col_2 "\n\n    table ::= "table_1 " | "table_2 "\n\n    condition ::= column "= " number\n\n    number ::= "1 " | "2 "\n"""\n\ncompletion = client.chat.completions.create(\n    model=model,\n    messages=[\n        {\n            "role": "user",\n            "content": "Generate an SQL query to show the \'username\' and \'email\' from the \'users\' table.",\n        }\n    ],\n    extra_body={"guided_grammar": simplified_sql_grammar},\n)\nprint(completion.choices[0].message.content)\n'})}),"\n",(0,s.jsx)(e.p,{children:"\u5982\u679c\u653e\u5230\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u5feb\u4e50\u5730\u5199\u51fa\u7c7b\u4f3c\u8fd9\u6837\u7684\u5b9a\u4e49"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:"output := (display | normal text) *\ndisplay := (```display json ```)\njson = ...\nnormal text = others\n"})}),"\n",(0,s.jsx)(e.p,{children:"\u5176\u4e2d\uff0cdisplay, json\u90fd\u662f\u5bb9\u6613\u5f97\u5230\u7684\uff0c\u4f46\u6076\u5fc3\u7684\u5730\u65b9\u5728\u4e8e\u4ec0\u4e48\u662f\u201cothers\u201d\n\u672a\u62d3\u5c55\u7684ebnf\u662f\u6ca1\u6709\u201c\u975e\u201d\u5b9a\u4e49\u7684\uff0c\u4ece\u5b9e\u64cd\u4e0a\u867d\u7136\u611f\u89c9\u53ef\u884c\uff08mask token\u53d6\u53cd\uff09\uff0c\u4f46\u8fd9\u4e0b\u5df2\u7ecf\u6ca1\u6709\u652f\u6301\u4e86"}),"\n",(0,s.jsx)(e.p,{children:"\uff08\u4f46ebnf\u89e3\u7801\u80af\u5b9a\u662f\u6709\u5927\u7528\u7684\uff0c\u8fd8\u662f\u4ee5Text2SQL\u4e3e\u4f8b\uff0c\u4efb\u4f55\u4e00\u4e2a\u6570\u636e\u5e93\u90fd\u4f1a\u7ed9\u4f60\u4ed6\u4eec\u7684\u89e3\u6790\u5f15\u64ce\u7684ebnf\u5b9a\u4e49\uff0c\u90fd\u4e0d\u9700\u8981\u4f60\u5199\uff09"}),"\n",(0,s.jsx)(e.p,{children:"\u600e\u4e48\u529e\u5462\uff0c\u5c31\u5e26\u6765\u4e86\u6700\u540e\u4e00\u4e2a\u51b7\u95e8\u5de5\u5177\uff0cstructured tags\uff0c\n\u6211\u5148\u4e0a\u4ee3\u7801\uff0c"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'def get_structural_tag_params(\n    tags: list[StructuralTag], triggers: list[str]\n) -> dict:\n    return {\n        "type": "structural_tag",\n        "structures": [model.model_dump() for model in tags],\n        "triggers": triggers,\n    }\n\n    model_v2 = ChatOpenAI(\n        base_url=base_url,\n        model=model_name,\n        api_key=api_key,\n        temperature=0.15,\n        top_p=0.9,\n        extra_body={\n            "response_format": get_structural_tag_params(\n                tags=[\n                    StructuralTag(\n                        begin="<block=text>",\n                        end="</block>",\n                        schema=TextMsgSchema.model_json_schema(),\n                    ),\n                    StructuralTag(\n                        begin="<block=image>",\n                        end="</block>",\n                        schema=ImageMsgSchema.model_json_schema(),\n                    ),\n                    StructuralTag(\n                        begin="<block=tool_use>",\n                        end="</block>",\n                        schema=ToolUseMsgSchema.model_json_schema(),\n                    ),\n                    StructuralTag(\n                        begin="<block=todo_list>",\n                        end="</block>",\n                        schema=TodoListMsgSchema.model_json_schema(),\n                    ),\n                    StructuralTag(\n                        begin="<block=html>",\n                        end="</block>",\n                        schema=HTMLMsgSchema.model_json_schema(),\n                    ),\n                ],\n                triggers=["<block="],\n            )\n        },\n    )\n'})}),"\n",(0,s.jsx)(e.p,{children:"\u8fd9\u4e2atags + triggers, \u5c31\u662fstructured output\u7684\u5173\u952e\u4e4b\u5904\uff0c\u5b83\u5141\u8bb8\u6211\u4eec\u5728trigger\u89e6\u53d1\u7684\u65f6\u5019\u624d\u5f00\u59cb\u7ea6\u675f\u89e3\u7801\uff0c\u5728end\u7ed3\u675f\u7684\u65f6\u5019\u505c\u6b62\u7ea6\u675f\u89e3\u7801"}),"\n",(0,s.jsx)(e.p,{children:"\u81f3\u6b64\uff0c\u8fd9\u4e2a\u5de5\u4f5c\u5df2\u7ecf\u505a\u5b8c\u4e86"}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.p,{children:"\u90a3\u7ea6\u675f\u89e3\u7801\u548c\u4e0d\u7ea6\u675f\u5e26\u6765\u7684\u6548\u679c\u5dee\u8ddd\u6709\u591a\u5927\u5462\uff0c\u6211\u572824B\u7684Mistral-Small\u4e0a\u505a\u4e86\u4e2a\u5b9e\u9a8c\n\u6700\u540e\u7684\u7ed3\u679c\u76f4\u63a5\u5c1d\u8bd5\u89e3\u6790\u540e\u6e32\u67d3\u5230\u524d\u7aef"}),"\n",(0,s.jsx)(e.p,{children:"Prompt\u5982\u4e0b\uff0c"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{children:'sys_prompt = f"""\n\n\u4f60\u662f\u4e00\u4e2aagent\u6a21\u578b\uff0c\u4f60\u8d1f\u8d23\u5904\u7406\u7528\u6237\u7684\u95ee\u9898\uff0c\u53d1\u8d77\u5de5\u5177\u8c03\u7528, \u7ed8\u5236\u56fe\u7247\u3001html\u3001\u83b7\u53d6\u6587\u672c\u7b49\u3002\n\n\u7531\u4e8e\u4f60\u7684token\u4ea4\u4e92\u91cf\u5f88\u5927\uff0c\u4e0d\u662f\u6240\u6709\u4fe1\u606f\u90fd\u9700\u8981\u5c55\u793a\u7ed9\u524d\u7aef\u3002\n\n\u4f60\u53ef\u4ee5\u6b63\u5e38\u601d\u8003\u548c\u8f93\u51fa\uff0c\u4f46\u4f60\u9700\u8981\u5c06\u4f60\u8ba4\u4e3a\u9700\u8981\u5c55\u793a\u7ed9\u7528\u6237\u7684\u6709\u6548\u4fe1\u606f\u5305\u88f9\u5728 `<block={{tag}}> {{schema}} </block>` \u4e2d\u3002\n\n\u524d\u7aef\u4f1a\u5c06\u8fd9\u90e8\u5206\u5185\u5bb9\u8fdb\u884c\u6e32\u67d3\uff0c\u4ea4\u7ed9\u7528\u6237\u3002\n\n\u4f60\u73b0\u5728\u53ef\u7528\u7684tag\u6709:\n\ntags: "text", "image", "tool_use", "todo_list", "html"\n\n\u5bf9\u5e94\u7684schema(pydantic\u683c\u5f0f)\u5982\u4e0b:\n\n- {schemas_str}\n\n\u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u5148\u4ea7\u751f\u4e00\u4e2atodo list\uff0c\u7136\u540e\u4e0d\u65ad\u6267\u884c\u5b50\u4efb\u52a1\uff0c\u5e76\u66f4\u65b0todo list\uff0c\u76f4\u5230\u6240\u6709\u4efb\u52a1\u5b8c\u6210\u3002\n\n\u7531\u4e8e\u4f60\u73b0\u5728\u6ca1\u6709\u63a5\u5165\u5de5\u5177\u8c03\u7528\uff0c\u6240\u4ee5\u5bf9\u4e8e\u6240\u6709\u5de5\u5177\u8c03\u7528\u4ea4\u4e92\uff0c\u4f60\u53ea\u9700\u8981\u201c\u5047\u88c5\u201d\u6267\u884c\u4e86\u5de5\u5177\u8c03\u7528\u5e76\u5f97\u5230\u4e00\u4e2a\u5408\u7406\u7684\u54cd\u5e94\u5c31\u884c\uff0c\u8fd9\u662f\u4e00\u4e2adebug\u73af\u5883\uff0c\n\n\u4f60\u9700\u8981\u6839\u636e\u7528\u6237\u7684\u95ee\u9898\u5c3d\u53ef\u80fd\u591a\u7684\u5c55\u793a\u4e0d\u540c\u7684block\uff0c\u5e76\u7ed9\u51fa\u4e00\u4e2a\u5408\u7406\u7684\u54cd\u5e94\u3002\n\n"""\n'})}),"\n",(0,s.jsxs)(e.p,{children:["\u8fd9\u4e2aprompt\u4e0b\uff0c",(0,s.jsx)(e.code,{children:"<block=text>111</block>"})," \u8fd9\u79cd\u5c31\u53d6\u4ee3\u4e86\u4e0a\u6587\u6240\u8ff0\u7684display\u5757\u7684\u6548\u679c"]}),"\n",(0,s.jsx)(e.p,{children:"\u53ea\u5b9a\u4e49\u4e86\u4e94\u79cd\u7279\u6b8a\u7684\u524d\u7aef\u5c55\u793a\u683c\u5f0f\uff0c\u6587\u672c\uff0c\u56fe\u7247\uff0cTODO list\uff0c\u5de5\u5177\u8c03\u7528\u548cHTML\u5757"}),"\n",(0,s.jsx)(e.p,{children:"\u6548\u679c\u5bf9\u6bd4\u5982\u4e0b\uff1a"}),"\n",(0,s.jsx)(e.p,{children:"\u7528\u6237\uff1a\u5e2e\u6211\u5b8c\u6210\u7f16\u5199\u4e00\u4e2a\u8bba\u575b\u5e16\u5b50\uff0c\u6253\u5f00\u6d4f\u89c8\u5668\u7684\u6c34\u6e90\u793e\u533a\u8bba\u575b\uff0c\u767b\u5f55\u4e4b\u540e\u5728discourse\u53d1\u5e16\u7684\u6d41\u7a0b\u3002"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.img,{alt:"alt text",src:t(72315).A+"",width:"1035",height:"705"}),"\n",(0,s.jsx)(e.img,{alt:"alt text",src:t(57490).A+"",width:"1035",height:"742"}),"\n",(0,s.jsx)(e.img,{alt:"alt text",src:t(88457).A+"",width:"1035",height:"742"}),"\n",(0,s.jsx)(e.img,{alt:"alt text",src:t(93984).A+"",width:"1035",height:"744"})]}),"\n",(0,s.jsx)(e.p,{children:"\u53ef\u4ee5\u770b\u5230\uff0c\u5de6\u4fa7\u6ca1\u6709\u7ea6\u675f\u89e3\u7801\u7684\u6a21\u578b\uff0c\u5728\u8fd9\u6837\u7684\u4efb\u52a1\u8d1f\u8f7d\u4e0b\uff0cjson \u53c2\u6570\u5c31\u5df2\u7ecf\u9891\u9891\u51fa\u73b0\u5931\u8bef\u4e86\uff0c\u800c\u53f3\u8fb9\u7684\u5373\u4f7f\u662f24B\u6a21\u578b\u7684fp8\u91cf\u5316\u975e\u601d\u8003\u7248\u672c\uff0c\u5374\u8dd1\u51fa\u4e86\u51e0\u767eB agent\u7684\u6c14\u52bf\uff0c\u5e76\u4e14token\u5f00\u9500\u662f\u6765\u56de\u5012\u817e\u7684\u51e0\u5206\u4e4b\u4e00"}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.p,{children:"\u4e00\u70b9\u611f\u60f3\uff1a\n\u6211\u4eec\u5e38\u8bf4\u4e00\u4e2a\u5b50\u9886\u57df\u7684\u77e5\u8bc6\u5bf9\u4e8e\u53e6\u4e00\u4e2a\u5b50\u9886\u57df\u662f\u7528\u5904\u5be5\u5be5\u7684\uff0c\u7136\u800c\uff0c\u8fd9\u4e0d\u662f\u62d2\u7edd\u65b0\u9886\u57df\u77e5\u8bc6\u7684\u7406\u7531\u554a\uff0cvllm\u548cxgrammer\u3001outlines\u8fd9\u79cd\u6846\u67b6\u90fd\u628a\u51e0\u79cd\u66f4\u5f3a\u5927\u7684\u7ed3\u6784\u5316\u89e3\u7801\u65b9\u6cd5\u6446\u5230\u4eba\u4eec\u7684\u8138\u4e0a\u4e86\uff0c\u8fd8\u662f\u80fd\u5728\u77e5\u4e4e\u770b\u5230\u201cebnf\u597d\u50cf\u662f\u7f16\u8bd1\u539f\u7406\u7684\u5185\u5bb9\uff0c\uff08\u4f5c\u4e3a\u540e\u7aef\u7a0b\u5e8f\u5458\uff09\u8df3\u8fc7\u201d\uff0c\u6216\u8005\u662f\u5728\u5404\u79cd\u5f00\u6e90\u4ed3\u5e93\u4e2d\u8fd8\u5728\u5e7f\u6cdb\u4f7f\u7528\u7684\u62ffprompt\u6307\u5bfcllm\u8f93\u51fa\uff0c\u5b8c\u5168\u4e0d\u8003\u8651\uff08\u751a\u81f3\u4e0d\u77e5\u9053\uff09\u7ed3\u6784\u5316\u8f93\u51fa\u8fd9\u6837\u7684\u4e1c\u897f"}),"\n",(0,s.jsx)(e.p,{children:'\u73b0\u5728\u7684\u540e\u7aef\u3001infra\u3001\u7b97\u6cd5\uff0c\u53c8\u6709\u591a\u5c11\u66f4\u6df1\u7684\u4f18\u5316\u65b9\u6848\u662f\u72ec\u7acb\u7684\u5462\uff1f\u4eca\u5929\u5728\u770bsnowflakes\u4f18\u5316\u65b9\u6848\uff0c\u771f\u662f\u628a\u4e0a\u5c42\u7b97\u6cd5\u548c\u5e95\u5c42infra\u76f8\u8f85\u76f8\u6210\uff0c\u53ea\u662f\u7f3a\u4e4f\u63a2\u7d22\u6027\u7684\u4eba\u4eec\uff0c\u4f1a\u62ff"\u8fd9\u4e0d\u662f\u6211\u7684\u5de5\u4f5c\uff0c\u8fd9\u662f\u4e13\u653b\u6a21\u578b/infra/\u7b97\u6cd5\u7684\u4eba\u7684\u5de5\u4f5c"\u642a\u585e\uff0c\u6700\u540e\u53c8\u5806\u8d77\u6765\u4e00\u4e2aprompt\u53f2\u5c71\u7f62\u4e86'}),"\n",(0,s.jsx)(e.p,{children:"\u5728\u73b0\u5728\u7684agent\u6846\u67b6\u4e2d\uff0c\u5145\u65a5\u7684\u4e5f\u662fprompt\u7684\u515c\u5e95\u65b9\u6848\uff0c\u5e26\u6765\u7684\u662fqwen3-coder\u51e0\u4e2a\u95ee\u9898\u7206\u6389\u7528\u6237\u767e\u4e07token\uff0c\u5e26\u6765\u7684\u662fclaude code\u95ee\u4e2a\u201c\u4f60\u662f\u8c01\u201d\u90fd\u8981\u82b1\u4e00\u89d2\u94b1\uff0c\u4f46\u6709\u6ca1\u6709\u4e00\u79cd\u53ef\u80fd\uff0c\u6211\u4eec\u672c\u53ef\u4ee5\u7528\u66f4\u786e\u5b9a\u7684\u4e1c\u897f\u5462\uff1fLLM\u662f\u4e00\u79cd\u4e07\u80fd\u7684\u6a21\u7cca\u63a8\u7406\uff0c\u4f46\u597d\u94a2\u4e5f\u8981\u7528\u5728\u5200\u5203\u4e0a\u554a\u3002"}),"\n",(0,s.jsx)(e.p,{children:"\u53c2\u8003\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'# ruff: noqa: E501\n# SPDX-License-Identifier: Apache-2.0\n# SPDX-FileCopyrightText: Copyright contributors to the vLLM project\n\nimport argparse\nimport asyncio\nimport enum\nimport json\nimport os\nimport re\nfrom pathlib import Path\nfrom typing import Any\n\nimport colorlog\nimport openai\nfrom langchain_core.messages import HumanMessage, SystemMessage\nfrom langchain_openai import ChatOpenAI\nfrom pydantic import BaseModel, Field\nfrom dotenv import load_dotenv\n\nload_dotenv()\n\n\nclass StructuralTag(BaseModel):\n    begin: str\n    end: str\n    schema: dict[\n        str, Any\n    ]  # JSON schema for validation, model_dump by pydantic model\n\n\nclass TextMsgSchema(BaseModel):\n    text: str = Field(..., description="Text message")\n\n    def to_html(self) -> str:\n        """Render text message as HTML"""\n        return f\'<div class="text-message">{self.text}</div>\'\n\n\nclass HTMLMsgSchema(BaseModel):\n    raw_html: str = Field(..., description="raw html str, like <div></div>")\n\n    def to_html(self) -> str:\n        """Render HTML message as HTML"""\n        return f\'<div class="html-message">{self.raw_html}</div>\'\n\n\nclass ImageMsgSchema(BaseModel):\n    image_url: str = Field(..., description="Image URL")\n    image_name: str = Field(..., description="Image name")\n\n    def to_html(self) -> str:\n        """Render image message as HTML"""\n        return f"""<div class="image-message">\n            <img src="{self.image_url}" alt="{self.image_name}" style="max-width: 100%; height: auto;">\n            <p class="image-caption">{self.image_name}</p>\n        </div>"""\n\n\nclass ToolUseMsgSchema(BaseModel):\n    tool_name: str = Field(..., description="Tool name")\n    args: dict[str, Any] = Field(..., description="Tool args")\n    tool_output: dict[str, Any] = Field(..., description="Tool output")\n\n    def to_html(self) -> str:\n        """Render tool use message as HTML"""\n        args_html = json.dumps(self.args, indent=2, ensure_ascii=False)\n        output_html = json.dumps(self.tool_output, indent=2, ensure_ascii=False)\n        return f"""<div class="tool-use-message">\n            <h4>Tool: {self.tool_name}</h4>\n            <div class="tool-args">\n                <strong>Arguments:</strong>\n                <pre>{args_html}</pre>\n            </div>\n            <div class="tool-output">\n                <strong>Output:</strong>\n                <pre>{output_html}</pre>\n            </div>\n        </div>"""\n\n\nclass TodoListMsgSchema(BaseModel):\n    todo_list: list[tuple[bool, str]] = Field(..., description="Todo list")\n\n    def to_html(self) -> str:\n        """Render todo list message as HTML"""\n        items = []\n        for done, item in self.todo_list:\n            checked = "checked" if done else ""\n            item_class = "completed" if done else "pending"\n            items.append(\n                f\'<li class="{item_class}"><input type="checkbox" {checked} disabled> {item}</li>\'\n            )\n        items_html = "\\n".join(items)\n        return f"""<div class="todo-list-message">\n            <h4>Todo List</h4>\n            <ul class="todo-list">\n                {items_html}\n            </ul>\n        </div>"""\n\n\ndef get_structural_tag_params(\n    tags: list[StructuralTag], triggers: list[str]\n) -> dict:\n    return {\n        "type": "structural_tag",\n        "structures": [model.model_dump() for model in tags],\n        "triggers": triggers,\n    }\n\n\ndef parse_structured_response(response: str) -> str:\n    """Parse structured response and convert blocks to HTML"""\n    # Schema mapping\n    schema_classes = {\n        "text": TextMsgSchema,\n        "image": ImageMsgSchema,\n        "tool_use": ToolUseMsgSchema,\n        "todo_list": TodoListMsgSchema,\n        "html": HTMLMsgSchema,\n    }\n\n    def replace_block(match):\n        tag_type = match.group(1)\n        content = match.group(2).strip()\n\n        if tag_type not in schema_classes:\n            return match.group(0)  # Return original if unknown tag\n\n        try:\n            # Parse JSON content\n            data = json.loads(content)\n            # Create schema instance\n            schema_instance = schema_classes[tag_type](**data)\n            # Return HTML\n            return schema_instance.to_html()\n        except (json.JSONDecodeError, ValueError) as e:\n            return (\n                f\'<div class="error">Error parsing {tag_type} block: {e}</div>\'\n            )\n\n    # Replace all <block=type>content</block> with HTML\n    pattern = r"<block=(\\w+)>\\s*(.*?)\\s*</block>"\n    return re.sub(pattern, replace_block, response, flags=re.DOTALL)\n\n\ndef create_comparison_html(response1: str, response2: str) -> str:\n    """Create a comparison HTML page with both responses"""\n    parsed_response2 = parse_structured_response(response2)\n\n    css = """\n    <style>\n        body {\n            font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', Roboto, sans-serif;\n            margin: 0;\n            padding: 20px;\n            background-color: #f5f5f5;\n        }\n        .container {\n            max-width: 1200px;\n            margin: 0 auto;\n            background: white;\n            border-radius: 8px;\n            box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n            overflow: hidden;\n        }\n        .header {\n            background: #2563eb;\n            color: white;\n            padding: 20px;\n            text-align: center;\n        }\n        .comparison {\n            display: flex;\n            min-height: 600px;\n        }\n        .column {\n            flex: 1;\n            padding: 20px;\n            border-right: 1px solid #e5e5e5;\n        }\n        .column:last-child {\n            border-right: none;\n        }\n        .column h3 {\n            margin-top: 0;\n            color: #1f2937;\n            border-bottom: 2px solid #e5e5e5;\n            padding-bottom: 10px;\n        }\n        .content {\n            line-height: 1.6;\n            color: #374151;\n        }\n        \n        /* Schema-specific styles */\n        .text-message {\n            background: #f8fafc;\n            padding: 15px;\n            border-radius: 8px;\n            margin: 10px 0;\n            border-left: 4px solid #3b82f6;\n        }\n        .image-message {\n            background: #f0fdf4;\n            padding: 15px;\n            border-radius: 8px;\n            margin: 10px 0;\n            border-left: 4px solid #10b981;\n            text-align: center;\n        }\n        .image-caption {\n            margin: 10px 0 0 0;\n            font-style: italic;\n            color: #6b7280;\n        }\n        .tool-use-message {\n            background: #fefce8;\n            padding: 15px;\n            border-radius: 8px;\n            margin: 10px 0;\n            border-left: 4px solid #eab308;\n        }\n        .tool-use-message h4 {\n            margin: 0 0 10px 0;\n            color: #92400e;\n        }\n        .tool-args, .tool-output {\n            margin: 10px 0;\n        }\n        .tool-args pre, .tool-output pre {\n            background: #1f2937;\n            color: #f9fafb;\n            padding: 10px;\n            border-radius: 4px;\n            overflow-x: auto;\n        }\n        .todo-list-message {\n            background: #fdf2f8;\n            padding: 15px;\n            border-radius: 8px;\n            margin: 10px 0;\n            border-left: 4px solid #ec4899;\n        }\n        .todo-list-message h4 {\n            margin: 0 0 10px 0;\n            color: #be185d;\n        }\n        .todo-list {\n            list-style: none;\n            padding: 0;\n        }\n        .todo-list li {\n            margin: 5px 0;\n            padding: 5px 0;\n        }\n        .todo-list li.completed {\n            text-decoration: line-through;\n            opacity: 0.7;\n        }\n        .html-message {\n            background: #f5f3ff;\n            padding: 15px;\n            border-radius: 8px;\n            margin: 10px 0;\n            border-left: 4px solid #8b5cf6;\n        }\n        .error {\n            background: #fef2f2;\n            color: #dc2626;\n            padding: 15px;\n            border-radius: 8px;\n            margin: 10px 0;\n            border-left: 4px solid #dc2626;\n        }\n        pre {\n            white-space: pre-wrap;\n            word-wrap: break-word;\n        }\n    </style>\n    """\n\n    return f"""\n    <!DOCTYPE html>\n    <html lang="zh-CN">\n    <head>\n        <meta charset="UTF-8">\n        <meta name="viewport" content="width=device-width, initial-scale=1.0">\n        <title>\u6a21\u578b\u54cd\u5e94\u5bf9\u6bd4</title>\n        {css}\n    </head>\n    <body>\n        <div class="container">\n            <div class="header">\n                <h1>\u6a21\u578b\u54cd\u5e94\u5bf9\u6bd4</h1>\n                <p>\u5de6\u4fa7\uff1a\u65e0\u7ed3\u6784\u5316\u6807\u7b7e | \u53f3\u4fa7\uff1a\u5e26\u7ed3\u6784\u5316\u6807\u7b7e\uff08\u5df2\u6e32\u67d3\uff09</p>\n            </div>\n            <div class="comparison">\n                <div class="column">\n                    <h3>\u65e0 Structure Tag</h3>\n                    <div class="content">\n                        <pre>{response1}</pre>\n                    </div>\n                </div>\n                <div class="column">\n                    <h3>Structure Tag\uff08\u5df2\u6e32\u67d3\uff09</h3>\n                    <div class="content">\n                        {parsed_response2}\n                    </div>\n                </div>\n            </div>\n        </div>\n    </body>\n    </html>\n    """\n\n\nif __name__ == "__main__":\n    base_url = "localhost:8000/v1"\n    model = openai.OpenAI(base_url=base_url, api_key="sk-")\n    schemas = [\n        TextMsgSchema.model_json_schema(),\n        ImageMsgSchema.model_json_schema(),\n        ToolUseMsgSchema.model_json_schema(),\n        TodoListMsgSchema.model_json_schema(),\n        HTMLMsgSchema.model_json_schema(),\n    ]\n    schemas_str = "\\n- ".join([json.dumps(s, indent=4) for s in schemas])\n    sys_prompt = f"""\n\u4f60\u662f\u4e00\u4e2aagent\u6a21\u578b\uff0c\u4f60\u8d1f\u8d23\u5904\u7406\u7528\u6237\u7684\u95ee\u9898\uff0c\u53d1\u8d77\u5de5\u5177\u8c03\u7528, \u7ed8\u5236\u56fe\u7247\u3001html\u3001\u83b7\u53d6\u6587\u672c\u7b49\u3002\n\u7531\u4e8e\u4f60\u7684token\u4ea4\u4e92\u91cf\u5f88\u5927\uff0c\u4e0d\u662f\u6240\u6709\u4fe1\u606f\u90fd\u9700\u8981\u5c55\u793a\u7ed9\u524d\u7aef\u3002\n\u4f60\u53ef\u4ee5\u6b63\u5e38\u601d\u8003\u548c\u8f93\u51fa\uff0c\u4f46\u4f60\u9700\u8981\u5c06\u4f60\u8ba4\u4e3a\u9700\u8981\u5c55\u793a\u7ed9\u7528\u6237\u7684\u6709\u6548\u4fe1\u606f\u5305\u88f9\u5728 `<block={{tag}}> {{schema}} </block>` \u4e2d\u3002\n\u524d\u7aef\u4f1a\u5c06\u8fd9\u90e8\u5206\u5185\u5bb9\u8fdb\u884c\u6e32\u67d3\uff0c\u4ea4\u7ed9\u7528\u6237\u3002\n\n\u4f60\u73b0\u5728\u53ef\u7528\u7684tag\u6709:\ntags: "text", "image", "tool_use", "todo_list", "html"\n\u5bf9\u5e94\u7684schema(pydantic\u683c\u5f0f)\u5982\u4e0b:\n- {schemas_str}\n\n\u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u5148\u4ea7\u751f\u4e00\u4e2atodo list\uff0c\u7136\u540e\u4e0d\u65ad\u6267\u884c\u5b50\u4efb\u52a1\uff0c\u5e76\u66f4\u65b0todo list\uff0c\u76f4\u5230\u6240\u6709\u4efb\u52a1\u5b8c\u6210\u3002\n\u7531\u4e8e\u4f60\u73b0\u5728\u6ca1\u6709\u63a5\u5165\u5de5\u5177\u8c03\u7528\uff0c\u6240\u4ee5\u5bf9\u4e8e\u6240\u6709\u5de5\u5177\u8c03\u7528\u4ea4\u4e92\uff0c\u4f60\u53ea\u9700\u8981\u201c\u5047\u88c5\u201d\u6267\u884c\u4e86\u5de5\u5177\u8c03\u7528\u5e76\u5f97\u5230\u4e00\u4e2a\u5408\u7406\u7684\u54cd\u5e94\u5c31\u884c\uff0c\u8fd9\u662f\u4e00\u4e2adebug\u73af\u5883\uff0c\n\u4f60\u9700\u8981\u6839\u636e\u7528\u6237\u7684\u95ee\u9898\u5c3d\u53ef\u80fd\u591a\u7684\u5c55\u793a\u4e0d\u540c\u7684block\uff0c\u5e76\u7ed9\u51fa\u4e00\u4e2a\u5408\u7406\u7684\u54cd\u5e94\u3002\n\n    """\n    base_url = "http://localhost:8000/v1"\n    model_name = "stelterlab/Mistral-Small-3.2-24B-Instruct-2506-FP8"\n    api_key = "sk-"\n    model = ChatOpenAI(\n        base_url=base_url,\n        model=model_name,\n        api_key=api_key,\n        temperature=0.15,\n        top_p=0.9,\n    )\n    print("-" * 50)\n    logger = colorlog.getLogger("Agent")\n    msgs = [\n        SystemMessage(content=sys_prompt),\n        HumanMessage(\n            content="\u5e2e\u6211\u5b8c\u6210\u7f16\u5199\u4e00\u4e2a\u8bba\u575b\u5e16\u5b50\uff0c\u6253\u5f00\u6d4f\u89c8\u5668\u7684\u6c34\u6e90\u793e\u533a\u8bba\u575b\uff0c\u767b\u5f55\u4e4b\u540e\u5728discourse\u53d1\u5e16\u7684\u6d41\u7a0b\u3002"\n        ),\n    ]\n\n    model_v2 = ChatOpenAI(\n        base_url=base_url,\n        model=model_name,\n        api_key=api_key,\n        temperature=0.15,\n        top_p=0.9,\n        extra_body={\n            "response_format": get_structural_tag_params(\n                tags=[\n                    StructuralTag(\n                        begin="<block=text>",\n                        end="</block>",\n                        schema=TextMsgSchema.model_json_schema(),\n                    ),\n                    StructuralTag(\n                        begin="<block=image>",\n                        end="</block>",\n                        schema=ImageMsgSchema.model_json_schema(),\n                    ),\n                    StructuralTag(\n                        begin="<block=tool_use>",\n                        end="</block>",\n                        schema=ToolUseMsgSchema.model_json_schema(),\n                    ),\n                    StructuralTag(\n                        begin="<block=todo_list>",\n                        end="</block>",\n                        schema=TodoListMsgSchema.model_json_schema(),\n                    ),\n                    StructuralTag(\n                        begin="<block=html>",\n                        end="</block>",\n                        schema=HTMLMsgSchema.model_json_schema(),\n                    ),\n                ],\n                triggers=["<block="],\n            )\n        },\n    )\n\n    logger.info("=== \u6d4b\u8bd5\u5f00\u59cb ===")\n    response1 = model.invoke(msgs).content\n    logger.info(f"=== \u6d4b\u8bd5\u7ed3\u675f ===\\n{response1}")\n\n    logger.info("=== \u6d4b\u8bd5\u5f00\u59cb ===")\n    response2 = model_v2.invoke(msgs).content\n    logger.info(f"=== \u6d4b\u8bd5\u7ed3\u675f ===\\n{response2}")\n\n    # \u751f\u6210\u5bf9\u6bd4HTML\u6587\u4ef6\n    comparison_html = create_comparison_html(response1, response2)\n    Path("tmp/test_comparison.html").write_text(\n        comparison_html, encoding="utf-8"\n    )\n    logger.info("\u5df2\u751f\u6210\u5bf9\u6bd4HTML\u6587\u4ef6: tmp/test_comparison.html")\n\n    # \u4fdd\u7559\u539f\u6709\u7684Markdown\u6587\u4ef6\n    with Path("tmp/test_diff.md").open("w", encoding="utf-8") as f:\n        f.write("\u65e0structure tag: \\n")\n        f.write(response1)\n        f.write("\\n\\nstructure tag: \\n")\n        f.write(response2)\n\n'})})]})}function m(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(d,{...n})}):d(n)}},72315:(n,e,t)=>{t.d(e,{A:()=>s});const s=t.p+"assets/images/image-10-57a8fd70dc61313b1baa8538ab00ca8f.png"},57490:(n,e,t)=>{t.d(e,{A:()=>s});const s=t.p+"assets/images/image-11-fea313f95fa94fb03b64d9ffb986bcdd.png"},88457:(n,e,t)=>{t.d(e,{A:()=>s});const s=t.p+"assets/images/image-12-fea313f95fa94fb03b64d9ffb986bcdd.png"},93984:(n,e,t)=>{t.d(e,{A:()=>s});const s=t.p+"assets/images/image-13-8da20497ce50bd4b1c67a14c8618f6ec.png"},28453:(n,e,t)=>{t.d(e,{R:()=>r,x:()=>l});var s=t(96540);const o={},a=s.createContext(o);function r(n){const e=s.useContext(a);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:r(n.components),s.createElement(a.Provider,{value:e},n.children)}}}]);